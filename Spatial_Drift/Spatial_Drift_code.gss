/* Written by Subodh K Dubey */

library maxlik;
maxset;
cls;
format /m1/rzt 1,6;

/*****************************************************************************
                  Global Variable Definitions 
*****************************************************************************/
clearg B_mat,sigma_mat,P_error,G_mat,S_mat,C_mat,D_mat,Mean_Negative,ieffect,rho_active,theta_active,cutoff_distance,nind,nchocc,nobs,_row,_randper,_randd,_counterc,_counterp;
clearg nvar,nc,nran,seed1,seed2,seed,seed10,xTildec,GHK,_halt_maxdraws,_halt_numdraws,nrep,allHaltDraws,Total_Pair,Outer_feed,grid_pair,LL_run,Run_No,MACML_seed,MACML_run;
clearg dta_Tild,Start_time,End_time,Hessian_scaled,Hessian_unscaled,JMat,B_mat1,sigma_mat1,P_error1,G_mat1,S_mat1,C_mat1,D_mat1,Psi_Cholesky,Seed_cov,Seed_error,Ext_Test,Tild_config_check;

Own_data = 0;                              /* Make this 1, if you want to specify your own dataset */
Simulation_data = 1;                       /* Make this 1, if you wish to perform a simulation run */
runpath = "K:/subodh/SPatial_Drift/1/";    /* The program generates the data for simulation internally in case simulation option is chosen and outputs the file to the location provided by the variable runpath */           
                                           /* The program also generate a duplicate data file when the own_data option is chosen to verify that correct columns were read during label generation and outputs the file to the location provided by the variable runpath */
outpath = "K:/subodh/SPatial_Drift/1/";    /* Path for estimation result file */

nind = 300;                                /* Number of individuals in the dataset */
nchocc = 5;                           /* Number of choice occasion per individual */ 
nobs = nind*nchocc;                   /* Total number of observations in the dataset */
_row = nobs;                          /* Number of rows to be read at a time by log-likelihood function */
_randper = 1;                         /* Random permutations of all digits */
_randd = 0;                           /* All permutations or random permutations */

nvar = 3;                             /* Number of variables in the utility equation per alternative */
nc   = 4;                             /* Number of alternatives */
nran = 2;                             /* Number of random parameters */
cutoff_distance = 1.1;                /* Distance band for pairing of observations in the likelihood expression */

ieffect = 0;                /* Make this 1, if you have alternative specific constants in the model */
rho_active = 0;             /* Make this 1, if you have temporal autoregressive parameter in the model */ 

if( ieffect eq 1);
   theta_active = 1;       /* Allows you to estimate the spatial drift parameter associated with alternative spacific constants */
else;
   theta_active = 0;
endif;

Psi_Cholesky = 0;         /* Make this 1, if you want to obtain the cholesky elements of error covariance matrix as your final estimates */

/*****************************************************************************
                  How to specify your own dataset
*****************************************************************************/
/* If you have your own dataset, specify your daatset in the following way. The dataset should be a csv file without header. */
/* The number of rows in the dataset should be equal to nobs and columns should be equal to (nvar*nc+2+1). */
if(Own_data eq 1);
 load dataset_name[nobs,(nvar*nc+2+1)] = C:/subodh/SPatial_Drift/1/SD_data.csv;  
/******************************************************************************/
elseif(Simulation_data eq 1);
Run_No = 1;                          /* Simulation run number */

seed1 = 23570;                 /* Seed for exogeneous variables */
seed2 = 32660 + Run_No;      /* Seed for the random parameter covariance matrix */
seed  = 62660 + Run_No ;    /* Seed for the error term */
endif;

seed10 = 300000;           /* Seed for MACML approach */



/*****************************************************************************
                  Weight Matrix Generation
*****************************************************************************/
clearg width, length,xCoord,yCoord,weight1,weight2,weight3,weight4,weightM1,distance;
width = 50;length = nind/width;
xCoord = seqa(1,1,length) .*. ones(width,1);
yCoord = ones(length,1).*.seqa(1,1,width);

weight1 = zeros(nind,nind);  /* inverse of distance square */
weight2 = zeros(nind,nind);  /* inverse of distance root */
weight3 = zeros(nind,nind);  /* inverse of distance */
weight4 = zeros(nind,nind);  /* inverse of exponential distance */

distance = zeros(nind,nind);


for iobs (1,nind,1);
    for jobs (1,nind,1);
        temp = sqrt(( xCoord[iobs]-xCoord[jobs] )^2 + ( yCoord[iobs]-yCoord[jobs] )^2); 
        if(temp ne 0); weight1[iobs,jobs] = 1/(temp^2); weight2[iobs,jobs] = 1/sqrt(temp); weight3[iobs,jobs] = 1/temp; weight4[iobs,jobs] = 1/exp(temp); distance[iobs,jobs] = temp;
        else; weight1[iobs,jobs] = 0; weight2[iobs,jobs] = 0; weight3[iobs,jobs] =0 ; weight4[iobs,jobs] =0 ; distance[iobs,jobs] = 0; endif;            
    endfor;
endfor;

weightM1 = weight3;          /* Specify the weight matrix configuration to be used in the estimation */
a = sumr(weightM1);
weightM1 = weightM1./a;

/* If you have your own distance and weight matrix, specify them in the following way 
  load distance[nind,nind] = C:/subodh/spatial_drift/mydistance_mat.csv;
  load weightM1[nind,nind] = C:/subodh/spatial_drift/myweight_mat.csv;               
  Please make sure that the weight matrix is row normalized                         */

grid_pair = zeros(nind,5);
for i(1,nind,1);
	counter = 0;
	for j(1,nind,1);
		if(distance[i,j] < cutoff_distance);
			counter = counter + 1;
			grid_pair[i,counter] = j;
		endif;
		
	endfor;
endfor;

/*********************************************************************************************************************************************
                 Exogeneous Variable Generation 
If you choose the option Simulation_data, this section generates the simulation data, Otherwise, it creates 
labels for columns specified in the external dataset.
**********************************************************************************************************************************************/
meanvar = 2.6*ones(nvar,1)|2.4*ones(nvar,1)|2.2*ones(nvar,1)|2.0*ones(nvar,1);
sigvar  =  ones(nvar,1)| ones(nvar,1)|ones(nvar,1)|ones(nvar,1);

dataset = runpath $+ "syndata.dat";
dataset_out = runpath $+ "myfile_mod.txt";

/* Defining the labels for the variables */
vnames = { x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 };

ntot = nvar*nc;
fin = 0;
create fin = ^dataset with ^vnames,ntot,8,8;
obs = 0; nr = 1;
do while obs < nobs;
	dat = {};
	
	if(Own_data eq 1);
	   dat = dat ~ dataset_name[obs+1,1:cols(vnames)];             
	elseif(Simulation_data eq 1);   
    dat = (meanvar'+(sigvar'.*(rndns(nr,nvar*(nc),seed1))));
    endif;

      if writer(fin,dat) /= nr;
         print "Disk Full"; end;
      endif;
   obs= obs+nr;
endo;
closeall fin;

invar = getname(dataset)|"uno"|"sero";
outvar = invar;

call initalize(dataset);

proc(0)= initalize(dataset);
     local add_data,fout,y,fpin,nin,outdata;
	 clear fin;
     open fin = ^dataset;
     fpin = typef(fin);
     nin = rowsf(fin);
     do until eof(fin);
       add_data = readr(fin,nobs);
     endo;
    if fin > 0; fin = close(fin); endif;
     outdata = add_data~ones(nobs,1)~zeros(nobs,1);
     create fout = ^dataset with ^outvar,0,8;
     y = writer(fout,outdata);   
     if fout > 0;fout = close(fout);endif; 
 endp;
 
open f1 = ^dataset;          
assign = readr(f1,nobs);
outwidth 200;
output file = ^dataset_out;     
output reset;
screen off;
print assign;
output off;
screen on;
 
 load Main_data2[nobs,(nc*nvar)+2] = ^dataset_out;             
 
 logfile= outpath $+ "Output" $+ ftocv(Run_No,2,0) $+ ".txt";
 OUTPUT FILE= ^logfile ON;outwidth 250;format /m1 /rzt 1,15; OUTPUT reset;
 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Position of UNO variable (i.e., the column of ones) in data set. 
   The dataset should consist of a column of ones.*/
   

{ unov,ivuno } = indices(dataset,"uno");

/* Position of SERO variable (i.e., the column of zeros) in data set. 
   The dataset should consist of a column of zeros.*/


{ serov,ivsero } = indices(dataset,"sero");

/* Utility specification for the alternatives */
let if1 = { x1 x2 x3 };
let if2 = { x4 x5 x6 }; 
let if3 = { x7 x8 x9 }; 
let if4 = { x10 x11 x12 };


{ v1,itf1 } = indices(dataset,if1');
{ v2,itf2 } = indices(dataset,if2');
{ v3,itf3 } = indices(dataset,if3');
{ v4,itf4 } = indices(dataset,if4');


ivgenv = itf1'~itf2'~itf3'~itf4';        

xTildec = zeros(nind*nchocc*nc,nind*nvar);
	for iind1 (1,nind,1);
			dta_required = Main_data2[nchocc*(iind1-1)+1:nchocc*(iind1-1)+nchocc,ivgenv];
			dta_required = reshape(dta_required,nchocc*nc,nvar);
			xTildec[nchocc*(nc)*(iind1-1)+1:nchocc*(nc)*(iind1-1)+nchocc*(nc),(iind1-1)*nvar+1:(iind1-1)*nvar+nvar]= dta_required;
	endfor;
clear dta_required,iind1;

/*****************************************************************************
                 True Value of Parameters
*****************************************************************************/
dgp_b = 0.5|0.8|1;                   /* Exogeneous variables coefficients */ 

dgp_OmTild = {0.81 0.54,            
              0.54 1.00};            /* Covariance matrix for random parameters (exogeneous variables) */
			
dgp_a = 0.3|0.4|0.6;                /* Alternative specific constants */ 

dgp_lambda = {1.0 0.5 0.5,          
              0.5 1.0 0.5, 
              0.5 0.5 1.0 };       /* Covariance matrix for alternative specific constants */
			  
dgp_Psi = {1.0 0.5 0.5, 
           0.5 1.0 0.5, 
           0.5 0.5 1.0 };        /* Covariance matrix for the differenced error term vector */

/* Make sure that all the spatial paramters have a value greater than zero and less than or equal to one */		   
dgp_theta = 0.25;               /* Spatial drift parameter for alternative specific constants */
dgp_del = 0.25;                 /* Spatial lag parameter */
dgp_lamda = 0.00000000001|0.25|0.25;   /* Spatial drift parameter for exogeneous variables */
dgp_rho = 0.00000000001;               /* Temporal autoregressive parameter */

nCholOmega = (rows(dgp_OmTild))*(rows(dgp_OmTild)+1)/2;
nCholErr = (nc-1)*(nc)/2;

/****************************************************************************************************************************************************************************************
                 Packing of all parameters in a single vector ( Do not change anything below this line) 
*****************************************************************************************************************************************************************************************/
if (ieffect eq 1);
	dgp_X = dgp_a|vech(dgp_lambda)|dgp_b|vech(dgp_OmTild)|vech(dgp_Psi)|dgp_theta|dgp_del|dgp_lamda|dgp_rho;
else;
	 dgp_X = dgp_b|vech(dgp_OmTild)|vech(dgp_Psi)|dgp_del|dgp_lamda|dgp_rho;
endif;

if(Own_data eq 1);
	chosen_alternative = dataset_name[.,(nvar*nc+2+1)];     /* Stores the chosen alternative column indicator from the dataset */
elseif(Simulation_data eq 1);	
    chosen_alternative = dloop(Main_data2,dgp_X);           /* Calculation of chosen alternative, given the value of parameters */ 
endif;



	  dgp_b1 = dgp_b;

      dgp_OmTild1 = dgp_OmTild;
		 
      dgp_a1 = dgp_a;

      dgp_lambda1 = dgp_lambda;
			  
	  dgp_Psi1 = dgp_Psi;


		dgp_theta1 = ln((1-dgp_theta)/dgp_theta);
		dgp_del1 = ln((1-dgp_del)/dgp_del);
		dgp_lamda1 = ln((1-dgp_lamda)./dgp_lamda);
		dgp_rho1 = ln((1-dgp_rho)/dgp_rho);

	
	
if (ieffect eq 1);
	
	dgp_X1 = dgp_a1|vech(dgp_lambda1)|dgp_b1|vech(dgp_OmTild1)|vech(dgp_Psi1)|dgp_theta1|dgp_del1|dgp_lamda1|dgp_rho1;
	
	bb = (dgp_X1[1:nc-1]
	     |vech(chol(xpnd(dgp_X1[nc-1+1:nc-1+nCholErr]))')
		 |dgp_X1[nc-1+nCholErr+1:nc-1+nCholErr+nvar]
		 |vech(chol(xpnd(dgp_X1[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega]))')
		 |vech(chol(xpnd(dgp_X1[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr]))')
		 |dgp_X1[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1]
		 |dgp_X1[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1]
		 |dgp_X1[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar]
		 |dgp_X1[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1]);
		 
	_max_active = 1|1|1|
	              1|
				  1|1|
				  1|1|1|
				  1|1|1|
				  1|
				  1|1|
				  0|
				  1|1|
				  1|1|1|
				  1|
				  1|
				  1|1|1|
				  1;
				  
else;
	 
	 dgp_X1 = dgp_b1|vech(dgp_OmTild1)|vech(dgp_Psi1)|dgp_del1|dgp_lamda1|dgp_rho1;
	
	bb = (dgp_X1[1:nvar]
		 |vech(chol(xpnd(dgp_X1[nvar+1:nvar+nCholOmega]))')
		 |vech(chol(xpnd(dgp_X1[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr]))')
		 |dgp_X1[nvar+nCholOmega+nCholErr+1]
		 |dgp_X1[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar]
		 |dgp_X1[nvar+nCholOmega+nCholErr+1+nvar+1]);
		 
		 
	_max_active = 1|1|1|
				  1|
				  1|1|
				  0|
				  0|0|
				  0|0|0|
				  1|
				  0|1|1|
				  0;	
endif;

capR = zeros(nchocc,nchocc);
for ichocc (1,nchocc-1,1);
    capR[ichocc+1,ichocc]=1;
endfor;

/*Final Dataset */

if(Own_data eq 1);
    Main_data = dataset_name;
elseif(Simulation_data eq 1);
    Main_data = Main_data2 ~ chosen_alternative;
endif;


/* If you have your own dataset, simply replace the right hand side of previous line with the name of your dataset. */
/* For example Main_data = dataset_name; */


M = zeros(nind*nchocc*(nc-1),nind*nchocc*nc);
chosen_num = chosen_alternative;
store_alt = zeros(1,nc);
for i(1,nc,1);
	e = chosen_num .eq i;
	store_alt[1,i] = (sumc(e)/nobs)*100;
	clear e;
endfor;
clear store_alt;
Mean_Negative = 1;
iden_matrix = eye(nc-1);
one_negative = -1*ones(nc-1,1);
for i(1,nind*nchocc,1);
	if(chosen_num[i,1] eq 1);
		temp = one_negative ~ iden_matrix;
	elseif(chosen_num[i,1] eq nc);
		temp = iden_matrix ~ one_negative;
	else;
		ch = chosen_num[i,1];
		temp = iden_matrix[.,1:ch-1] ~ one_negative ~ iden_matrix[.,ch:nc-1];
	endif;
	M[(i-1)*(nc-1)+1:(i-1)*(nc-1)+(nc-1),(i-1)*(nc)+1:(i-1)*(nc)+(nc)] = temp;
	clear temp;
endfor;


/* Defining variable labels for printing */
const_nam = 0 $+ "A" $+ ftocv(seqa(1,1,nc-1),2,0);
lambda_nam = 0 $+ "Lambda" $+ ftocv(seqa(1,1,nCholErr),2,0);
beta_nam = 0 $+ "X" $+ ftocv(seqa(1,1,nvar),2,0);
OmTild_nam =  0 $+ "Tild" $+ ftocv(seqa(1,1,nCholOmega),2,0);
Psi_nam =  0 $+ "Psi" $+ ftocv(seqa(1,1,nCholErr),2,0);
theta_nam = 0 $+ "Theta" $+ ftocv(seqa(1,1,1),2,0);
del_nam = 0 $+ "Del" $+ ftocv(seqa(1,1,1),2,0);
lamda_nam = 0 $+ "Lamda" $+ ftocv(seqa(1,1,nvar),2,0);	
rho_nam = 0 $+ "Rho" $+ ftocv(seqa(1,1,1),2,0);

if(ieffect eq 1);
	_max_ParNames = const_nam|lambda_nam|beta_nam|OmTild_nam|Psi_nam|theta_nam|del_nam|lamda_nam|rho_nam;
else;
	_max_ParNames = beta_nam|OmTild_nam|Psi_nam|del_nam|lamda_nam|rho_nam;
endif;

Start_time = time_check();
_max_GradTol = 1e-4; 
_max_MaxIters = 40;                          /* Upper limit of iteration */
_max_Options = { bfgs stepbt };
_max_CovPar = 2;
_max_GradProc = &lgd;
{ x,f,g,cov,retcode } = maxprt(maxlik(Main_data,0,&lpr,bb));


clear _max_GradProc;
clear B_mat,sigma_mat,P_error,G_mat,S_mat,C_mat,D_mat;

if (ieffect eq 1);
	dgp_a2 = x[1:nc-1];

    dgp_lambda2 = (upmat(xpnd(x[nc-1+1:nc-1+nCholErr])))';
	dgp_lambda2 = dgp_lambda2*dgp_lambda2';
	
	dgp_b2 = x[nc-1+nCholErr:nc-1+nCholErr+nvar];

    dgp_OmTild2 = (upmat(xpnd(x[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega])))';
	dgp_OmTild2 = dgp_OmTild2*dgp_OmTild2';		

    dgp_Psi2 = (upmat(xpnd(x[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr])))';
	dgp_Psi2 = dgp_Psi2*dgp_Psi2';
		   
	dgp_theta2 = 1/(1+exp(x[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1]));
	dgp_del2 = 1/(1+exp(x[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1]));
	dgp_lamda2 = 1/(1+exp(x[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar]));
	dgp_rho2 = 1/(1+exp(x[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1]));
	
	dgp_X2 = dgp_a2|vech(dgp_lambda2)|dgp_b2|vech(dgp_OmTild2)|vech(dgp_Psi2)|dgp_theta2|dgp_del2|dgp_lamda2|dgp_rho2;
	
	bb2 = (dgp_X2[1:nc-1]
	     |vech(chol(xpnd(dgp_X2[nc-1+1:nc-1+nCholErr]))')
		 |dgp_X2[nc-1+nCholErr+1:nc-1+nCholErr+nvar]
		 |vech(chol(xpnd(dgp_X2[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega]))'));
		 
	if(Psi_Cholesky eq 1);	 
		 bb2 = bb2 |vech(chol(xpnd(dgp_X2[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr]))');
	else;
		 bb2 = bb2 |dgp_X2[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr];
	endif;
	 
	    bb2 = bb2 |dgp_X2[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1]
		          |dgp_X2[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1]
		          |dgp_X2[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar]
		          |dgp_X2[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1];
		 
					  
else;
	dgp_b2 = x[1:nvar];

    dgp_OmTild2 = (upmat(xpnd(x[nvar+1:nvar+nCholOmega])))';
	dgp_OmTild2 = dgp_OmTild2*dgp_OmTild2';		

    dgp_Psi2 = (upmat(xpnd(x[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr])))';
	dgp_Psi2 = dgp_Psi2*dgp_Psi2';
		   
	dgp_del2 = 1/(1+exp(x[nvar+nCholOmega+nCholErr+1]));
	dgp_lamda2 = 1/(1+exp(x[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar]));
	dgp_rho2 = 1/(1+exp(x[nvar+nCholOmega+nCholErr+1+nvar+1]));
	 
	 
	dgp_X2 = dgp_b2|vech(dgp_OmTild2)|vech(dgp_Psi2)|dgp_del2|dgp_lamda2|dgp_rho2;
	
	bb2 = (dgp_X2[1:nvar]
		 |vech(chol(xpnd(dgp_X2[nvar+1:nvar+nCholOmega]))'));
		 
	if(Psi_Cholesky eq 1);	 
		 bb2 = bb2 |vech(chol(xpnd(dgp_X2[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr]))');
	else;
		 bb2 = bb2 |dgp_X2[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr];
	endif;
	 
		 bb2 = bb2 | dgp_X2[nvar+nCholOmega+nCholErr+1]
		           | dgp_X2[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar]
		           | dgp_X2[nvar+nCholOmega+nCholErr+1+nvar+1];
		 
		 
endif;

_max_Options = { bfgs stepbt };
_max_MaxIters = 0;
_max_CovPar = 1;
_max_GradProc = &lgd1;
{ x,f,g,cov,retcode } = maxprt(maxlik(Main_data,0,&lpr1,bb2));

clearg Cov_unscaled,Cov_scaled,Cov_IM,st_error_unscaled,st_error_scaled,st_error_IM,Hessian_gauss,Hessian_org,Cov_BHHH,st_error_BHHH;
JMat = JMatrix(bb2,Main_data,grid_pair);
JMat = Total_Pair*JMat;

if( _max_CovPar eq 1);
   Hessian_org = _max_FinalHess*nobs;
   if(det(Hessian_org) > 0);
      Cov_BHHH = inv(Hessian_org)*JMat*inv(Hessian_org);
   
   Var_BHHH = diag(Cov_BHHH);
   Negative_variance = 0;
   for i(1,rows(Var_BHHH),1);
       if(Var_BHHH[i] < 0);
	      Negative_variance = Negative_variance + 1;
       endif;
    endfor;

   if( Negative_variance eq 0);	
       st_error_BHHH = sqrt(diag(Cov_BHHH));
   endif;
   endif;	
endif;
   
	Cov_unscaled = inv(Hessian_unscaled)*JMat*inv(Hessian_unscaled);
    Cov_IM       = inv(JMat);
    needx        = selif(x,_max_active);

st_error_unscaled = sqrt(diag(Cov_unscaled));
st_error_IM       = sqrt(diag(Cov_IM));

if(det(Hessian_org) > 0 );
	if(Negative_variance eq 0);

"-----------------Final Result---------------------------------------------------------------------------------";
"Log-likelihood value : " ftos(LL_run,"%#*.*lG",10,6);
print "Parameter         Estimate      ST.Error        T-Stat";
omat = (selif(_max_parNames,_max_active) ~ needx ~ st_error_BHHH ~ (needx./st_error_BHHH) );
mask = 0~1~1~1;
let fmt[4,3] = 
            "-*.*s "  8 8   @ format info for variable names column @
            "*.*lf" 15 3   @ format info for mean column           @
			"*.*lf" 15 4   @ format info for mean column           @
            "*.*lf" 15 2   @ format info for mean column           @;
y = printfm(omat,mask,fmt);
  endif;
else;

"-----------------Final Result---------------------------------------------------------------------------------";
"Log-likelihood value : " ftos(LL_run,"%#*.*lG",10,6);
print "Parameter         Estimate      ST.Error        T-Stat";
omat = (selif(_max_parNames,_max_active) ~ needx ~ st_error_unscaled ~ (needx./st_error_unscaled) );
mask = 0~1~1~1;
let fmt[4,3] = 
            "-*.*s "  8 8   @ format info for variable names column @
            "*.*lf" 15 3   @ format info for mean column           @
			"*.*lf" 15 4   @ format info for mean column           @
            "*.*lf" 15 2   @ format info for mean column           @;
y = printfm(omat,mask,fmt);
endif;
"----------------------------------------------------------------------------------------------------";
End_time = time_check;

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
proc(1) = dloop(dta,parm);
	  local smalla,lambda,smallb,OmTild,Psi,theta,delta,lamda,cholOmTild,cholOmTild1,cholLambda,cholPsi,rho;
	  local capA,capC,capS,capG,capD,IminusDelW,theta_weight,err_bet,err_psi,err_lambda,err_cholLambda,err_cholLambda1,err_cholOmTild,err_cholPsi,betTild,r1,v,totUtil,Utility;
	  local Alt_chose,lamda_mat,j,Sq;	  
	  
	  if(ieffect eq 1);
		  smalla = parm[1:nc-1];
		  lambda = xpnd(parm[nc-1+1:nc-1+nCholErr]);
		  smallb = parm[nc-1+nCholErr+1:nc-1+nCholErr+nvar];
		  OmTild = xpnd(parm[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega]);
		  Psi    = xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr]);
		  theta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1];
		  delta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
		  lamda = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar];
		  rho   = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1];
		  
		  cholOmTild = zeros(nvar,nvar);   cholOmTild1 = (chol(OmTild))';  cholOmTild[nran:nvar,nran:nvar] = cholOmTild1;
		  cholLambda = zeros(nc,nc);       cholLambda[2:nc,2:nc] = (chol(lambda))';
		  cholPsi    = zeros(nc,nc);       cholPsi[2:nc,2:nc]    = (chol(Psi))';
	  else;
		  smallb = parm[1:nvar];
		  OmTild = xpnd(parm[nvar+1:nvar+nCholOmega]);
		  Psi    = xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr]);
		  delta = parm[nvar+nCholOmega+nCholErr+1];
		  lamda = parm[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar];
		  rho   = parm[nvar+nCholOmega+nCholErr+1+nvar+1];
		  
		  cholOmTild = zeros(nvar,nvar);   cholOmTild1 = (chol(OmTild))';  cholOmTild[nran:nvar,nran:nvar] = cholOmTild1;
		  cholPsi    = zeros(nc,nc);       cholPsi[2:nc,2:nc]    = (chol(Psi))';
	  endif;
	  
	  if(ieffect eq 1);
		  capA = zeros(nc,nc);
          for inc (1,nc-1,1);
              capA[inc+1,inc+1] = smalla[inc];
          endfor;
	  endif;
	  
	  if(rho_active eq 1);
		  capC = eye(nind) .*. inv( eye(nc*nchocc) - rho*capR .*. eye(nc) );
	  endif;
	  
	  Sq = inv( eye(nind)   -  (delta * weightM1) );
	  capS =  Sq  .*. eye(nchocc*nc) ;
	  
	  clear Sq; 
	  
	  if(theta_active eq 1);
		  theta_weight = (theta*weightM1).*.(ones(nchocc,nchocc).*.eye(nc));
		  capG = inv(eye(nind*nchocc*nc) - theta_weight );
	  endif;
	  
	  lamda_mat = zeros(nvar,nvar);
	  lamda_mat = diagrv(lamda_mat,lamda);
	  capD = inv(eye(nind*nvar) - (weightM1.*.(lamda_mat*eye(nvar))));
	  
	  err_bet = (rndns(nind,nvar,seed2));
      err_psi = (rndns(nind*nchocc,nc,seed));
	 
	  if(ieffect eq 1);
		 err_lambda = (rndns(nind,nc,seed2)); 
		 err_cholLambda = (cholLambda * err_lambda')'; 
		 err_cholLambda1 = ones(1,nchocc) .*. err_cholLambda ; 
		 err_cholLambda1 = reshape(err_cholLambda1,nind*nchocc*nc,1);
		 
	  endif;
	 
	 err_cholOmTild = (cholOmTild * err_bet' )' ;   // nind X nvar
	 err_cholPsi = (cholPsi * err_psi')';           // nind*nchocc X nc
	 
	 
	 betTild = reshape(err_cholOmTild,nind*nvar,1);
	 r1 = reshape(err_cholPsi,nind*nchocc*nc,1);
	 v1 = (ones(nc,1) .*. smallb )*~(dta[.,ivgenv])';
	 
	 j=1;
	 v = {};
     do until j == nc+1;
       v = v~(sumc(v1[(j-1)*nvar+1:(j*nvar),.]));
	   j = j+1;
     endo;
	 v = reshape(v,nind*nchocc*nc,1);
	 clear v1;
    
	if((ieffect eq 1) AND (rho_active eq 1));
        totUtil = capS*(ones(nind*nchocc,1) .*. (capA*ones(nc,1)) + capG*err_cholLambda1 + v + (xTildec*capD)*betTild + capC*r1);	
	else;
		totUtil = capS*(v + (xTildec*capD)*betTild + r1);
	endif;
	
	Utility = reshape(totUtil,nind*nchocc,nc);
	Alt_chose = maxindc(Utility');
	retp(Alt_chose);
	clear capA,capC,capS,capG,capD,IminusDelW,theta_weight,err_bet,err_psi,err_lambda,err_cholLambda,err_cholLambda1,err_cholOmTild,err_cholPsi,betTild,r1,v,totUtil,Utility;
endp;


proc lpr(parm,dta);
    local smalla,chol_Lambda,smallb,chol_OmTild,chol_Psi,theta,delta,lamda,rho,OmTild,OmTild1,Lambda,Psi,v1,j,v,capS,capA,capC,theta_weight,capG,lamda_mat,capD;
	local Alt_sp_coeff,utility,Lambda_big,OmTild_big,Psi_big,pure_error,sigma1,capB,sigma,seednext,individual_prob;
	local pair1,pair1_t,pair2,pair2_t,p1v,p1_mean,p2v,p1cv,p2cv,p2_mean,co_var,mean,om,Mean_final,Var_final,p,sss,Sq,seed20;

     if(ieffect eq 1);
		  smalla = parm[1:nc-1];
		  chol_Lambda = (upmat(xpnd(parm[nc-1+1:nc-1+nCholErr])));
		  smallb = parm[nc-1+nCholErr+1:nc-1+nCholErr+nvar];
		  chol_OmTild = (upmat(xpnd(parm[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega])));
		  chol_Psi    = (upmat(xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr])));
		  theta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1];
		  delta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
		  lamda = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar];
		  rho   = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  Lambda = zeros(nc,nc);           Lambda[2:nc,2:nc] = chol_Lambda'*chol_Lambda;
		  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  theta = 1/(1+exp(theta));
		  delta = 1/(1+exp(delta));
		  lamda = 1/(1+exp(lamda));
		  rho   = 1/(1+exp(rho));
	  else;
		  smallb = parm[1:nvar];
		  chol_OmTild = (upmat(xpnd(parm[nvar+1:nvar+nCholOmega])));
		  chol_Psi    = (upmat(xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr])));
		  delta = parm[nvar+nCholOmega+nCholErr+1];
		  lamda = parm[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar];
		  rho   = parm[nvar+nCholOmega+nCholErr+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  delta = 1/(1+exp(delta));
		  lamda = 1/(1+exp(lamda));
		  rho   = 1/(1+exp(rho));
	  endif;
	  
	v1 = (ones(nc,1) .*. smallb )*~(dta[.,ivgenv])';
	 
	j=1;
	v = {};
    do until j == nc+1;
       v = v~(sumc(v1[(j-1)*nvar+1:(j*nvar),.]));
	   j = j+1;
    endo;
	
	clear v1;
	v = reshape(v,nind*nchocc*nc,1);
		
	Sq = inv( eye(nind)   -  (delta * weightM1) );
	capS =  Sq  .*. eye(nchocc*nc) ;
	
	clear Sq;
	if(ieffect eq 1);
		  capA = zeros(nc,nc);
          for inc (1,nc-1,1);
              capA[inc+1,inc+1] = smalla[inc];
          endfor;
	endif;
	
	if(rho_active eq 1);
		  capC = eye(nind) .*. inv( eye(nc*nchocc) - rho*capR .*. eye(nc) );
	endif;
	
	if(theta_active eq 1);
	   theta_weight = (theta*weightM1).*.(ones(nchocc,nchocc).*.eye(nc));
	   capG = inv(eye(nind*nchocc*nc) - theta_weight ); 
	endif;
	
    lamda_mat = zeros(nvar,nvar);
	lamda_mat = diagrv(lamda_mat,lamda);
	capD = inv(eye(nind*nvar) - (weightM1.*.(lamda_mat*eye(nvar))));

    if(ieffect eq 1);
      Alt_sp_coeff = ones(nind*nchocc,1) .*. (capA*ones(nc,1));
	  utility = capS*(Alt_sp_coeff + v);
	else;
	  utility = capS * v;
	endif;
	
	if((ieffect eq 1) AND (rho_active eq 1));
	   Lambda_big = eye(nind) .*. (ones(nchocc,nchocc) .*. Lambda);
	   OmTild_big = eye(nind) .*. OmTild;
	   Psi_big    = eye(nind*nchocc) .*. Psi;
	   pure_error = (capG * Lambda_big * capG') + (xTildec * capD * OmTild_big * capD' * xTildec') + (capC * Psi_big * capC'); 
	   sigma1 = capS * pure_error * capS' ; 
	else;
	   OmTild_big = eye(nind) .*. OmTild;
	   Psi_big    = eye(nind*nchocc) .*. Psi;
	   pure_error = xTildec * capD * OmTild_big * capD' * xTildec' + Psi_big ; 
	   sigma1 = capS * pure_error * capS' ;
	endif;
	clear Lambda_big,OmTild_big,Psi_big; 
	capB = M * utility;
	sigma = M * sigma1 * M';
	
	clear utility,sigma1;
	
	if(Mean_Negative eq 1);
	   B_mat = -capB; 
    else;
	   B_mat = capB;
    endif;
   	sigma_mat = sigma; D_mat = capD; S_mat = capS; P_error = pure_error; 
	if ((ieffect eq 1) AND (rho_active eq 1));
	    C_mat = capC;  G_mat = capG;
    endif;
	clear capG,capC,capS,capD,capB,sigma,pure_error;
	
	seednext = seed10;
	individual_prob = 0;
	
	for pair1(1,nind,1);
		for pair1_t(1,nchocc,1);
			
			p1v = {}; p1_mean = {};
			            p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
						p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
			
		    for pair2(pair1,nind,1);
				for pair2_t(1,nchocc,1);
					
					p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {};
					
					if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
						p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
						p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
						p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
						p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
						co_var = co_var ~ (p1v ~ p1cv);
						co_var = co_var | (p2cv ~ p2v);
						mean = mean | p1_mean;
						mean = mean | p2_mean;
	
	                    om = diag(co_var);
						Mean_final = mean'./(sqrt((om')));
						Var_final = corrvc(co_var);
						Var_final = diagrv(Var_final,ones(2*(nc-1),1));
						seed20=seednext;
						
						{p,sss} = cdfmvna(Mean_final,Var_final,seed20);
					    				    
					    seednext = sss;
						individual_prob = individual_prob + ln(p);
						
					    clear co_var,mean,om,Mean_final,Var_final;
						
					elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
	                    p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
						p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
						p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
						p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
						co_var = co_var ~ (p1v ~ p1cv);
						co_var = co_var | (p2cv ~ p2v);
						mean = mean | p1_mean;
						mean = mean | p2_mean;
	
	                    om = diag(co_var);
						Mean_final = mean'./(sqrt((om')));
						Var_final = corrvc(co_var);
						Var_final = diagrv(Var_final,ones(2*(nc-1),1));
						seed20=seednext;
						
						{p,sss} = cdfmvna(Mean_final,Var_final,seed20);
					    				    
					    seednext = sss;
						individual_prob = individual_prob + ln(p);
						
						clear co_var,mean,om,Mean_final,Var_final;
						
					endif;
				endfor;
			endfor;
		endfor;
	endfor;
	
    retp(individual_prob);
	
endp;

 proc lgd(parm,dta);
	 local smalla,chol_lambda,smallb,chol_OmTild,chol_Psi,theta,delta,lamda,rho,OmTild,OmTild1,Lambda,Psi,seed20;
     local smalla_gradient,lambda_gradient,smallb_gradient,OmTild_gradient,Psi_gradient,theta_gradient,delta_gradient,lamda_gradient,rho_gradient;
     local iatr,d_capA,forgcapV,diff_mat1,diff_mat,seednext,Total_g,pair1,pair1_t,pair2,pair2_t,p1v,p1v_d,p1_mean,p1d_mean,p2v,p2v_d,p1cv_d,p2cv_d,p1cv,p2cv,p2_mean,co_var,mean,p2d_mean,meand,co_var_d;
     local om,omncd,Mean_final,Meand_final,Var_final,shi_a,shi_r,g_smalla,ilambda,d_chol_Lambda,d_Lambda,final_error1,shi_r_unq,g_lambda,Var_d_final,g,w,sss,fix_check,forgx,forgv2,j,forgv,g_smallb;
     local d_chol_OmTild,d_OmTild,OmTild_big,g_OmTild,d_chol_Psi,d_Psi,Psi_big,g_Psi,theta_weight,G_diff,Lambda_big,g_theta,v2,Sq,d_Sq,v,Delta_Mean,Delta_Error,g_delta,lamda_mat,lamda_dig,d_capD,ilamda,g_lamda;
     local d_sq1,d_sq2,d_capC,g_rho,gradient,dd_theta,dd_delta,dd_lamda,dd_rho,Final_error,d_capS,d_OmTild1,ir,capA,Alt_sp_coeff;
	 
	 if(ieffect eq 1);
		  smalla = parm[1:nc-1];
		  chol_Lambda = (upmat(xpnd(parm[nc-1+1:nc-1+nCholErr])));
		  smallb = parm[nc-1+nCholErr+1:nc-1+nCholErr+nvar];
		  chol_OmTild = (upmat(xpnd(parm[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega])));
		  chol_Psi    = (upmat(xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr])));
		  theta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1];
		  delta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
		  lamda = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar];
		  rho   = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  Lambda = zeros(nc,nc);           Lambda[2:nc,2:nc] = chol_Lambda'*chol_Lambda;
		  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  theta = 1/(1+exp(theta));        dd_theta = theta*(theta-1);
		  delta = 1/(1+exp(delta));        dd_delta = delta*(delta-1);
		  lamda = 1/(1+exp(lamda));        dd_lamda = lamda.*(lamda-1);
		  rho   = 1/(1+exp(rho));          dd_rho   = rho*(rho-1);
	  else;
		  smallb = parm[1:nvar];
		  chol_OmTild = (upmat(xpnd(parm[nvar+1:nvar+nCholOmega])));
		  chol_Psi    = (upmat(xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr])));
		  delta = parm[nvar+nCholOmega+nCholErr+1];
		  lamda = parm[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar];
		  rho   = parm[nvar+nCholOmega+nCholErr+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  delta = 1/(1+exp(delta));        dd_delta = delta*(delta-1);
		  lamda = 1/(1+exp(lamda));        dd_lamda = lamda.*(lamda-1);
		  rho   = 1/(1+exp(rho));          dd_rho   = rho*(rho-1);
	  endif;
	 
	 if(ieffect eq 1);
		 smalla_gradient = {};
         for iatr(1,nc-1,1);
			 if(_max_active[iatr] eq 0);
				 smalla_gradient = smalla_gradient ~ 0;
		     else;
			 
			 
				 d_capA = zeros(nc,nc);
				 d_capA[iatr+1,iatr+1]=1;
				 forgcapV = S_mat * (ones(nind*nchocc,1) .*. (d_capA*ones(nc,1)) );
				 diff_mat1 = M * forgcapV;
				 
				 if(Mean_Negative eq 1);
				    diff_mat = -diff_mat1;
				 else;
					diff_mat = diff_mat1;
				 endif;
				
				 clear d_capA,forgcapV,diff_mat1;
				 seednext = seed10;
				 Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1d_mean = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1d_mean = p1d_mean ~ diff_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2d_mean = {}; meand = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smalla = (1/w)*(Meand_final' * shi_a);
										
										Total_g = Total_g + g_smalla;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smalla,g;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
									   {w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smalla = (1/w)*(Meand_final' * shi_a);
										Total_g = Total_g + g_smalla;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smalla,g;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			smalla_gradient = smalla_gradient ~ Total_g;
			
			clear diff_mat;
		endif;
			endfor;
	
	lambda_gradient = {};
	for ilambda(1,nCholErr,1);
		if(_max_active[nc-1+ilambda] eq 0);
			lambda_gradient = lambda_gradient ~ 0;
		else;
			
			 d_chol_Lambda = zeros(ncholErr,1);d_chol_Lambda[ilambda]=1;                         d_chol_Lambda = upmat(xpnd(d_chol_Lambda));
             d_Lambda = zeros(nc,nc);  d_Lambda[2:nc,2:nc]   = d_chol_Lambda'*chol_Lambda + chol_Lambda'*d_chol_Lambda; 
			 Lambda_big = eye(nind) .*. (ones(nchocc,nchocc) .*. d_Lambda); 
		     final_error1 = G_mat * Lambda_big * G_mat';
			 final_error1 = S_mat * final_error1 * S_mat';
			 Final_Error  = M * final_error1 * M';
			 
			 clear d_chol_Lambda,d_Lambda,Lambda_big,final_error1;
			 
			 seednext = seed10;
			 Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
  								        {w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   								   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lambda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lambda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lambda;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20 = seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lambda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lambda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lambda;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			lambda_gradient = lambda_gradient ~ Total_g;
			
			clear Final_Error;
		endif;
			endfor;
endif;
clear iatr;
smallb_gradient = {};
for iatr(1,nvar,1);
	if(ieffect eq 1);
		fix_check = _max_active[nc-1+nCholErr+iatr];
	else;
		fix_check = _max_active[iatr];
	endif;
	
	if(fix_check eq 0);
		smallb_gradient = smallb_gradient ~ 0;
	else;
		forgx = smallb*0;forgx[iatr]=1;
        forgv2 = (ones(nc,1) .*. forgx)*~(dta[.,ivgenv])';
        j=1;
        forgv = {};
        do until j == nc+1;
            forgv = forgv~(sumc(forgv2[(j-1)*nvar+1:(j*nvar),.]));
            j = j+1;
        endo;
        clear forgv2;

        forgv = reshape(forgv,nind*nchocc*nc,1);
        forgcapV = S_mat * (forgv );
		diff_mat1 = M * forgcapV;
		
		if(Mean_Negative eq 1);
		    diff_mat = -diff_mat1;
		else;
			diff_mat = diff_mat1;
		endif;
	    
		clear forgv2,forgv,forgcapV,diff_mat1;
		seednext = seed10;
		Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1d_mean = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1d_mean = p1d_mean ~ diff_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2d_mean = {}; meand = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smallb = (1/w)*(Meand_final' * shi_a);
										Total_g = Total_g + g_smallb;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smallb,g;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smallb = (1/w)*(Meand_final' * shi_a);
										Total_g = Total_g + g_smallb;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smallb,g;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			smallb_gradient = smallb_gradient ~ Total_g;
			
			clear diff_mat;
		endif;
			endfor;


OmTild_gradient = {};
   for ichol(1,nCholOmega,1);
	   if(ieffect eq 1);
		  fix_check = _max_active[nc-1+nCholErr+nvar+ichol];
	   else;
		  fix_check = _max_active[nvar+ichol];
	   endif;
	
	   if(fix_check eq 0);
		  OmTild_gradient = OmTild_gradient ~ 0;
	  else;
		  
		  d_chol_OmTild = zeros(ncholOmega,1);d_chol_OmTild[ichol]=1;                         d_chol_OmTild = upmat(xpnd(d_chol_OmTild));
          d_OmTild1 = d_chol_OmTild'*chol_OmTild + chol_OmTild'*d_chol_OmTild;
		  d_OmTild = zeros(nvar,nvar);
		  d_OmTild[nran:nvar,nran:nvar] = d_OmTild1;
		  OmTild_big = eye(nind) .*. d_OmTild;
	      final_error1 = xTildec * D_mat * OmTild_big * D_mat' * xTildec' ; 
		  final_error1 = S_mat * final_error1 * S_mat';
		  Final_Error  = M * final_error1 * M';
		  
		  clear d_chol_OmTild,d_OmTild,d_OmTild1,OmTild_big,final_error1;
		  
		  seednext = seed10;
		  Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_OmTild = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_OmTild;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_OmTild;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_OmTild = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_OmTild;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_OmTild;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			OmTild_gradient = OmTild_gradient ~ Total_g;
			clear Final_Error;
		endif;
  endfor;
	
  Psi_gradient = {};
     for ipsi(1,nCholErr,1);
		 if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+ipsi];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+ipsi];
	     endif;
	
	   if(fix_check eq 0);
		  Psi_gradient = Psi_gradient ~ 0;
	  else;
		  
		  d_chol_Psi = zeros(ncholErr,1);d_chol_Psi[ipsi]=1;                         d_chol_Psi = upmat(xpnd(d_chol_Psi));
          d_Psi = zeros(nc,nc);  d_Psi[2:nc,2:nc]   = d_chol_Psi'*chol_Psi + chol_Psi'*d_chol_Psi;
		  Psi_big    = eye(nind*nchocc) .*. d_Psi;
	      
		  if(rho_active eq 1);
	         final_error1 = C_mat * Psi_big * C_mat' ;
			 final_error1 = S_mat * final_error1 * S_mat';
		     Final_Error  = M * final_error1 * M';
		  else;
			 final_error1 = Psi_big ;
			 final_error1 = S_mat * final_error1 * S_mat';
		     Final_Error  = M * final_error1 * M';
		  endif;
		 
		  clear d_chol_Psi,d_Psi,Psi_big,final_error1;
		  
		  seednext = seed10;
		  Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_Psi = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_Psi;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_Psi;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_Psi = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_Psi;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_Psi;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			Psi_gradient = Psi_gradient ~ Total_g;
			clear Final_Error;
		endif;
  endfor;
	
 theta_gradient = {};
         if(theta_active eq 0);
			 theta_gradient = theta_gradient ~ 0;
		 else;
			theta_weight = (dd_theta*weightM1).*.(ones(nchocc,nchocc).*.eye(nc));
	        G_diff       = G_mat * theta_weight * G_mat;
			Lambda_big   = eye(nind) .*. (ones(nchocc,nchocc) .*. Lambda); 
			final_error1 = G_diff * Lambda_big * G_mat'  + G_mat * Lambda_big * G_diff' ;
			final_error1 = S_mat * final_error1 * S_mat';
			Final_Error  = M * final_error1 * M';
			
			clear theta_weight,G_diff,Lambda_big,final_error1;
			
			seednext = seed10;
		    Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_theta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_theta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_theta;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_theta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_theta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_theta;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			theta_gradient = theta_gradient ~ Total_g;
			clear Final_Error;
		 endif;


delta_gradient = {};
         if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+nCholErr+1];
		 endif;
		
		 if(fix_check eq 0);
			 delta_gradient = delta_gradient ~ 0;
		 else;
			
			Sq = inv( eye(nind)   -  (delta * weightM1) );
			d_Sq = dd_delta*Sq*(weightM1)*Sq;
	        d_capS = d_Sq .*. eye(nchocc*nc);
	  
	        clear Sq,d_Sq; 
			
			v2 = (ones(nc,1) .*. smallb )*~(dta[.,ivgenv])';
			j=1;
            v = {};
			do until j == nc+1;
              v = v~(sumc(v2[(j-1)*nvar+1:(j*nvar),.]));
              j = j+1;
            endo;
			
			clear v2;
	        v = reshape(v,nind*nchocc*nc,1);
			
			if(ieffect eq 1);
		      capA = zeros(nc,nc);
              for ir (1,nc-1,1);
                  capA[ir+1,ir+1] = smalla[ir];
              endfor;
		      Alt_sp_coeff = ones(nind*nchocc,1) .*. (capA*ones(nc,1));
			  diff_mat1 = d_capS *(Alt_sp_coeff +  v);
		    else;
			  diff_mat1 = d_capS * v;
			endif;
	  
			diff_mat = M * diff_mat1 ;
			
			if(Mean_Negative eq 1);
				Delta_Mean = -(diff_mat);
			else;
			    Delta_Mean = (diff_mat);
			endif;
			
			final_error1 = d_capS * P_error * S_mat' + S_mat * P_error * d_capS';
			Delta_Error = M * final_error1 * M';
			
			clear Sq,d_Sq,v,diff_mat1,diff_mat,final_error1,ir,capA,Alt_sp_coeff;
			seednext = seed10;
		    Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {}; p1d_mean = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1d_mean = p1d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {}; meand = {}; p2d_mean = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            p2d_mean = p2d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = meand | p1d_mean;
							            meand = meand | p2d_mean;
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
																				
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_delta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_delta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_delta;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            p2d_mean = p2d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = meand | p1d_mean;
							            meand = meand | p2d_mean;
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
																				
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
								   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_delta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_delta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_delta;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			delta_gradient = delta_gradient ~ Total_g;
			clear Delta_Mean,Delta_Error;
  endif;
		
  lamda_gradient = {};
      for ilamda(1,nvar,1);
		 if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+ilamda];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+nCholErr+1+ilamda];
		 endif;
		
		 if(fix_check eq 0);
			 lamda_gradient = lamda_gradient ~ 0;
		 else; 
		     lamda_mat = zeros(nvar,nvar);
	         lamda_dig = zeros(nvar,1);
			 lamda_dig[ilamda] = 1;
			 lamda_dig = lamda_dig .* dd_lamda;
			 lamda_mat = diagrv(lamda_mat,lamda_dig);
			 
			 d_sq1 = weightM1 .*. (lamda_mat * eye(nvar));
			 d_capD = D_mat * d_sq1 * D_mat;
			 
			 OmTild_big = eye(nind) .*. OmTild;
			 final_error1 = (xTildec * d_capD * OmTild_big * D_mat' * xTildec') + (xTildec * D_mat * OmTild_big * d_capD' * xTildec');
			 final_error1 = S_mat * final_error1 * S_mat';
			 Final_Error = M * final_error1 * M';
			 
			 clear lamda_mat,lamda_dig,d_sq1,d_capD,OmTild_big,final_error1;
			 
			 seednext = seed10;
		     Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lamda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lamda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lamda;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lamda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lamda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lamda;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			lamda_gradient = lamda_gradient ~ Total_g;
			clear Final_Error;
		endif;
  endfor;

 rho_gradient = {};
         if(rho_active eq 0);
			 rho_gradient = rho_gradient ~ 0;
		 else; 		 
			 
			 d_sq1   = (dd_rho * capR) .*. eye(nc);
			 d_sq2   = inv( eye(nc*nchocc) - rho*capR .*. eye(nc) );
			 d_capC  = (d_sq2 * d_sq1 * d_sq2);
			 d_capC  = eye(nind) .*. d_capC; 
             Psi_big = eye(nind*nchocc) .*. Psi;
			 
			 final_error1 = (d_capC * Psi_big * C_mat') + (C_mat * Psi_big * d_capC');
			 final_error1 = S_mat * final_error1 * S_mat';
			 Final_Error  = M * final_error1 * M';
			 
			 clear d_sq1,d_sq2,d_capC,Psi_big,final_error1;
			 
			 seednext = seed10;
		     Total_g = 0;
		
					for pair1(1,nind,1);
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_rho = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_rho;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_rho;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_rho = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_rho;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_rho;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
			
			rho_gradient = rho_gradient ~ Total_g;
			clear Final_Error;
		endif;
		
	gradient = {};
    
	if (ieffect eq 1);
	   gradient = gradient ~ smalla_gradient ~ lambda_gradient ~ smallb_gradient ~ OmTild_gradient ~ Psi_gradient ~ theta_gradient ~ delta_gradient ~ lamda_gradient ~ rho_gradient;
    else;
	   gradient = gradient ~ smallb_gradient ~ OmTild_gradient ~ Psi_gradient  ~ delta_gradient ~ lamda_gradient ~ rho_gradient;
    endif;
    retp(gradient);
endp;

//--------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------UNPARAMETRIZED LPR AND GRADIENT-------------------------------------------------------------------------

proc lpr1(parm,dta);
    local smalla,chol_Lambda,smallb,chol_OmTild,chol_Psi,theta,delta,lamda,rho,OmTild,OmTild1,Lambda,Psi,v1,j,v,capS,capA,capC,theta_weight,capG,lamda_mat,capD;
	local Alt_sp_coeff,utility,Lambda_big,OmTild_big,Psi_big,pure_error,sigma1,capB,sigma,seednext,individual_prob,Psi1;
	local pair1,pair1_t,pair2,pair2_t,p1v,p1_mean,p2v,p1cv,p2cv,p2_mean,co_var,mean,om,Mean_final,Var_final,p,sss,Sq,seed20,lp_pair;

     if(ieffect eq 1);
		  smalla = parm[1:nc-1];
		  chol_Lambda = (upmat(xpnd(parm[nc-1+1:nc-1+nCholErr])));
		  smallb = parm[nc-1+nCholErr+1:nc-1+nCholErr+nvar];
		  chol_OmTild = (upmat(xpnd(parm[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega])));
		  
		  if(Psi_Cholesky eq 1);
		      chol_Psi    = (upmat(xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr])));
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  else;
			  Psi1    = xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr]);
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = Psi1;
		  endif;
			  
		  theta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1];
		  delta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
		  lamda = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar];
		  rho   = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  Lambda = zeros(nc,nc);           Lambda[2:nc,2:nc] = chol_Lambda'*chol_Lambda;
	 else;
		  smallb = parm[1:nvar];
		  chol_OmTild = (upmat(xpnd(parm[nvar+1:nvar+nCholOmega])));
		  
		  if(Psi_Cholesky eq 1);
		      chol_Psi    = (upmat(xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr])));
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  else;
			  Psi1    = xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr]);
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = Psi1;
		  endif;
			  
		  delta = parm[nvar+nCholOmega+nCholErr+1];
		  lamda = parm[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar];
		  rho   = parm[nvar+nCholOmega+nCholErr+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
	 endif;
	  
	v1 = (ones(nc,1) .*. smallb )*~(dta[.,ivgenv])';
	 
	j=1;
	v = {};
    do until j == nc+1;
       v = v~(sumc(v1[(j-1)*nvar+1:(j*nvar),.]));
	   j = j+1;
    endo;
	
	clear v1;
	v = reshape(v,nind*nchocc*nc,1);
		
	Sq = inv( eye(nind)   -  (delta * weightM1) );
	capS =  Sq  .*. eye(nchocc*nc) ;
	
	clear Sq;
	if(ieffect eq 1);
		  capA = zeros(nc,nc);
          for inc (1,nc-1,1);
              capA[inc+1,inc+1] = smalla[inc];
          endfor;
	endif;
	
	if(rho_active eq 1);
		  capC = eye(nind) .*. inv( eye(nc*nchocc) - rho*capR .*. eye(nc) );
	endif;
	
	if(theta_active eq 1);
	   theta_weight = (theta*weightM1).*.(ones(nchocc,nchocc).*.eye(nc));
	   capG = inv(eye(nind*nchocc*nc) - theta_weight ); 
	endif;
	
    lamda_mat = zeros(nvar,nvar);
	lamda_mat = diagrv(lamda_mat,lamda);
	capD = inv(eye(nind*nvar) - (weightM1.*.(lamda_mat*eye(nvar))));

    if(ieffect eq 1);
      Alt_sp_coeff = ones(nind*nchocc,1) .*. (capA*ones(nc,1));
	  utility = capS*(Alt_sp_coeff + v);
	else;
	  utility = capS * v;
	endif;
	
	if((ieffect eq 1) AND (rho_active eq 1));
	   Lambda_big = eye(nind) .*. (ones(nchocc,nchocc) .*. Lambda);
	   OmTild_big = eye(nind) .*. OmTild;
	   Psi_big    = eye(nind*nchocc) .*. Psi;
	   pure_error = (capG * Lambda_big * capG') + (xTildec * capD * OmTild_big * capD' * xTildec') + (capC * Psi_big * capC'); 
	   sigma1 = capS * pure_error * capS' ; 
	else;
	   OmTild_big = eye(nind) .*. OmTild;
	   Psi_big    = eye(nind*nchocc) .*. Psi;
	   pure_error = xTildec * capD * OmTild_big * capD' * xTildec' + Psi_big ; 
	   sigma1 = capS * pure_error * capS' ;
	endif;
	clear Lambda_big,OmTild_big,Psi_big; 
	capB = M * utility;
	sigma = M * sigma1 * M';
	
	clear utility,sigma1;
	
	if(Mean_Negative eq 1);
	   B_mat1 = -capB; 
    else;
	   B_mat1 = capB;
    endif;
   	sigma_mat1 = sigma; D_mat1 = capD; S_mat1 = capS; P_error1 = pure_error; 
	if ((ieffect eq 1) AND (rho_active eq 1));
	    C_mat1 = capC;  G_mat1 = capG;
    endif;
	clear capG,capC,capS,capD,capB,sigma,pure_error;
	
	seednext = seed10;
	individual_prob = 0;
	lp_pair = 0;
	for pair1(1,nind,1);
		for pair1_t(1,nchocc,1);
			
			p1v = {}; p1_mean = {};
			            p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
						p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
			
		    for pair2(pair1,nind,1);
				for pair2_t(1,nchocc,1);
					
					p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {};
					
					if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
						p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
						p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
						p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
						p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
						co_var = co_var ~ (p1v ~ p1cv);
						co_var = co_var | (p2cv ~ p2v);
						mean = mean | p1_mean;
						mean = mean | p2_mean;
	
	                    om = diag(co_var);
						Mean_final = mean'./(sqrt((om')));
						Var_final = corrvc(co_var);
						Var_final = diagrv(Var_final,ones(2*(nc-1),1));
						seed20=seednext;
						
					    {p,sss} = cdfmvna(Mean_final,Var_final,seed20);
					    					  					    
					    seednext = sss;
						individual_prob = individual_prob + ln(p);
						lp_pair = lp_pair + 1;
					    clear co_var,mean,om,Mean_final,Var_final;
						
					elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
	                    p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
						p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
						p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
						p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
						co_var = co_var ~ (p1v ~ p1cv);
						co_var = co_var | (p2cv ~ p2v);
						mean = mean | p1_mean;
						mean = mean | p2_mean;
	
	                    om = diag(co_var);
						Mean_final = mean'./(sqrt((om')));
						Var_final = corrvc(co_var);
						Var_final = diagrv(Var_final,ones(2*(nc-1),1));
						seed20=seednext;
						
						{p,sss} = cdfmvna(Mean_final,Var_final,seed20);
					    					  
					    seednext = sss;
						individual_prob = individual_prob + ln(p);
						lp_pair = lp_pair + 1;
						clear co_var,mean,om,Mean_final,Var_final;
						
					endif;
				endfor;
			endfor;
		endfor;
	endfor;
	Total_Pair = lp_pair;
	LL_run     = individual_prob;
    retp(individual_prob);
	
endp;

 proc lgd1(parm,dta);
	 local smalla,chol_lambda,smallb,chol_OmTild,chol_Psi,theta,delta,lamda,rho,OmTild,OmTild1,Lambda,Psi,seed20,Psi1;
     local smalla_gradient,lambda_gradient,smallb_gradient,OmTild_gradient,Psi_gradient,theta_gradient,delta_gradient,lamda_gradient,rho_gradient;
     local iatr,d_capA,forgcapV,diff_mat1,diff_mat,seednext,Total_g,pair1,pair1_t,pair2,pair2_t,p1v,p1v_d,p1_mean,p1d_mean,p2v,p2v_d,p1cv_d,p2cv_d,p1cv,p2cv,p2_mean,co_var,mean,p2d_mean,meand,co_var_d;
     local om,omncd,Mean_final,Meand_final,Var_final,shi_a,shi_r,g_smalla,ilambda,d_chol_Lambda,d_Lambda,final_error1,shi_r_unq,g_lambda,Var_d_final,g,w,sss,fix_check,forgx,forgv2,j,forgv,g_smallb;
     local d_chol_OmTild,d_OmTild,OmTild_big,g_OmTild,d_chol_Psi,d_Psi,Psi_big,g_Psi,theta_weight,G_diff,Lambda_big,g_theta,v2,Sq,d_Sq,v,Delta_Mean,Delta_Error,g_delta,lamda_mat,lamda_dig,d_capD,ilamda,g_lamda;
     local d_sq1,d_sq2,d_capC,g_rho,gradient,dd_theta,dd_delta,dd_lamda,dd_rho,Final_error,d_capS,d_OmTild1,ir,capA,Alt_sp_coeff;
	 local temp_count,Total_g1,gradient1,gradient2,gradient1_active,gradient2_active;
	 local smalla_gradient1,lambda_gradient1,smallb_gradient1,OmTild_gradient1,Psi_gradient1,theta_gradient1,delta_gradient1,lamda_gradient1,rho_gradient1;
	 local smalla_gradient2,lambda_gradient2,smallb_gradient2,OmTild_gradient2,Psi_gradient2,theta_gradient2,delta_gradient2,lamda_gradient2,rho_gradient2;
	 if(ieffect eq 1);
		  smalla = parm[1:nc-1];
		  chol_Lambda = (upmat(xpnd(parm[nc-1+1:nc-1+nCholErr])));
		  smallb = parm[nc-1+nCholErr+1:nc-1+nCholErr+nvar];
		  chol_OmTild = (upmat(xpnd(parm[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega])));
		  
		  if(Psi_Cholesky eq 1);
		      chol_Psi    = (upmat(xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr])));
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  else;
			  Psi1    = xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr]);
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = Psi1;
		  endif;
		  
		  theta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1];
		  delta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
		  lamda = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar];
		  rho   = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  Lambda = zeros(nc,nc);           Lambda[2:nc,2:nc] = chol_Lambda'*chol_Lambda;
		  dd_theta = 1;
		  dd_delta = 1;
		  dd_lamda = ones(nvar,1);
		  dd_rho   = 1;
	  else;
		  smallb = parm[1:nvar];
		  chol_OmTild = (upmat(xpnd(parm[nvar+1:nvar+nCholOmega])));
		  
		  if(Psi_Cholesky eq 1);
		      chol_Psi    = (upmat(xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr])));
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  else;
			  Psi1    = xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr]);
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = Psi1;
		  endif;
		  
		  delta = parm[nvar+nCholOmega+nCholErr+1];
		  lamda = parm[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar];
		  rho   = parm[nvar+nCholOmega+nCholErr+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  dd_delta = 1;
		  dd_lamda = ones(nvar,1);
		  dd_rho   = 1;
	  endif;
	 
	 if(ieffect eq 1);
		 smalla_gradient = {};
		 smalla_gradient1 = zeros(nind,nc-1);
		 smalla_gradient2 = zeros(nind,nc-1);
         for iatr(1,nc-1,1);
			 if(_max_active[iatr] eq 0);
				 smalla_gradient = smalla_gradient ~ 0;
				 smalla_gradient1[.,iatr] = zeros(nind,1);
				 smalla_gradient2[.,iatr] = zeros(nind,1);
		     else;
			 
			 
				 d_capA = zeros(nc,nc);
				 d_capA[iatr+1,iatr+1]=1;
				 forgcapV = S_mat1 * (ones(nind*nchocc,1) .*. (d_capA*ones(nc,1)) );
				 diff_mat1 = M * forgcapV;
				 
				 if(Mean_Negative eq 1);
				    diff_mat = -diff_mat1;
				 else;
					diff_mat = diff_mat1;
				 endif;
				
				 clear d_capA,forgcapV,diff_mat1;
				 seednext = seed10;
				 Total_g = 0;
		         
					for pair1(1,nind,1);
						temp_count = 0;
						Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1d_mean = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1d_mean = p1d_mean ~ diff_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2d_mean = {}; meand = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    								   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smalla = (1/w)*(Meand_final' * shi_a);
										
										Total_g = Total_g + g_smalla;
										temp_count = temp_count + 1;
						                Total_g1 = Total_g1 + g_smalla;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smalla,g;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
                                        {w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smalla = (1/w)*(Meand_final' * shi_a);
										
										Total_g = Total_g + g_smalla;
										temp_count = temp_count + 1;
						                Total_g1 = Total_g1 + g_smalla;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smalla,g;
										
									endif;
								endfor;
							endfor;
						endfor;
						smalla_gradient2[pair1,iatr] = Total_g1;
						smalla_gradient2[pair1,iatr] = (Total_g1/temp_count);
					endfor;
			
			smalla_gradient = smalla_gradient ~ Total_g;
			
			clear diff_mat;
		endif;
			endfor;
	
	lambda_gradient = {};
	lambda_gradient1 = zeros(nind,nCholErr);
	lambda_gradient2 = zeros(nind,nCholErr);
	for ilambda(1,nCholErr,1);
		if(_max_active[nc-1+ilambda] eq 0);
			lambda_gradient = lambda_gradient ~ 0;
			lambda_gradient1[.,ilambda] = zeros(nind,1);
			lambda_gradient2[.,ilambda] = zeros(nind,1);
		else;
			
			 d_chol_Lambda = zeros(ncholErr,1);d_chol_Lambda[ilambda]=1;                         d_chol_Lambda = upmat(xpnd(d_chol_Lambda));
             d_Lambda = zeros(nc,nc);  d_Lambda[2:nc,2:nc]   = d_chol_Lambda'*chol_Lambda + chol_Lambda'*d_chol_Lambda; 
			 Lambda_big = eye(nind) .*. (ones(nchocc,nchocc) .*. d_Lambda); 
		     final_error1 = G_mat1 * Lambda_big * G_mat1';
			 final_error1 = S_mat1 * final_error1 * S_mat1';
			 Final_Error  = M * final_error1 * M';
			 
			 clear d_chol_Lambda,d_Lambda,Lambda_big,final_error1;
			 
			 seednext = seed10;
			 Total_g = 0;
		
					for pair1(1,nind,1);
						temp_count = 0;
						Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lambda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lambda;
										temp_count = temp_count + 1;
						                Total_g1 = Total_g1 + g_lambda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lambda;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20 = seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lambda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lambda;
										temp_count = temp_count + 1;
						                Total_g1 = Total_g1 + g_lambda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lambda;
										
									endif;
								endfor;
							endfor;
						endfor;
						lambda_gradient1[pair1,ilambda] = Total_g1;
			            lambda_gradient2[pair1,ilambda] = (Total_g1/temp_count);
					endfor;
			
			lambda_gradient = lambda_gradient ~ Total_g;
			
			clear Final_Error;
		endif;
			endfor;
endif;
clear iatr;

smallb_gradient = {};
smallb_gradient1 = zeros(nind,nvar);
smallb_gradient2 = zeros(nind,nvar);
for iatr(1,nvar,1);
	if(ieffect eq 1);
		fix_check = _max_active[nc-1+nCholErr+iatr];
	else;
		fix_check = _max_active[iatr];
	endif;
	
	if(fix_check eq 0);
		smallb_gradient = smallb_gradient ~ 0;
		smallb_gradient1[.,iatr] = zeros(nind,1);
		smallb_gradient2[.,iatr] = zeros(nind,1);
	else;
		forgx = smallb*0;forgx[iatr]=1;
        forgv2 = (ones(nc,1) .*. forgx)*~(dta[.,ivgenv])';
        j=1;
        forgv = {};
        do until j == nc+1;
            forgv = forgv~(sumc(forgv2[(j-1)*nvar+1:(j*nvar),.]));
            j = j+1;
        endo;
        clear forgv2;

        forgv = reshape(forgv,nind*nchocc*nc,1);
        forgcapV = S_mat1 * (forgv );
		diff_mat1 = M * forgcapV;
		
		if(Mean_Negative eq 1);
		    diff_mat = -diff_mat1;
		else;
			diff_mat = diff_mat1;
		endif;
	    
		clear forgv2,forgv,forgcapV,diff_mat1;
		seednext = seed10;
		Total_g = 0;
		
					for pair1(1,nind,1);
						temp_count = 0;
                        Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1d_mean = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1d_mean = p1d_mean ~ diff_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2d_mean = {}; meand = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    
										seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smallb = (1/w)*(Meand_final' * shi_a);
										Total_g = Total_g + g_smallb;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_smallb;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smallb,g;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smallb = (1/w)*(Meand_final' * shi_a);
										Total_g = Total_g + g_smallb;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_smallb;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smallb,g;
										
									endif;
								endfor;
							endfor;
						endfor;
						smallb_gradient1[pair1,iatr] = Total_g1;
                        smallb_gradient2[pair1,iatr] = (Total_g1/temp_count);
					endfor;
			
			smallb_gradient = smallb_gradient ~ Total_g;
			
			clear diff_mat;
		endif;
			endfor;


OmTild_gradient = {};
OmTild_gradient1 = zeros(nind,nCholOmega);
OmTild_gradient2 = zeros(nind,nCholOmega);
   for ichol(1,nCholOmega,1);
	   if(ieffect eq 1);
		  fix_check = _max_active[nc-1+nCholErr+nvar+ichol];
	   else;
		  fix_check = _max_active[nvar+ichol];
	   endif;
	
	   if(fix_check eq 0);
		  OmTild_gradient = OmTild_gradient ~ 0;
		  OmTild_gradient1[.,ichol] = zeros(nind,1);
		  OmTild_gradient2[.,ichol] = zeros(nind,1);
	  else;
		  
		  d_chol_OmTild = zeros(ncholOmega,1);d_chol_OmTild[ichol]=1;                         d_chol_OmTild = upmat(xpnd(d_chol_OmTild));
          d_OmTild1 = d_chol_OmTild'*chol_OmTild + chol_OmTild'*d_chol_OmTild;
		  d_OmTild = zeros(nvar,nvar);
		  d_OmTild[nran:nvar,nran:nvar] = d_OmTild1;
		  OmTild_big = eye(nind) .*. d_OmTild;
	      final_error1 = xTildec * D_mat1 * OmTild_big * D_mat1' * xTildec' ; 
		  final_error1 = S_mat1 * final_error1 * S_mat1';
		  Final_Error  = M * final_error1 * M';
		  
		  clear d_chol_OmTild,d_OmTild,d_OmTild1,OmTild_big,final_error1;
		  
		  seednext = seed10;
		  Total_g = 0;
		
					for pair1(1,nind,1);
						temp_count = 0;
                        Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_OmTild = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_OmTild;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_OmTild;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_OmTild;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_OmTild = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_OmTild;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_OmTild;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_OmTild;
										
									endif;
								endfor;
							endfor;
						endfor;
						OmTild_gradient1[pair1,ichol] = Total_g1;
		                OmTild_gradient2[pair1,ichol] = (Total_g1/temp_count);
					endfor;
			
			OmTild_gradient = OmTild_gradient ~ Total_g;
			clear Final_Error;
		endif;
  endfor;
	
  Psi_gradient = {};
  Psi_gradient1 = zeros(nind,nCholErr);
  Psi_gradient2 = zeros(nind,nCholErr);
     for ipsi(1,nCholErr,1);
		 if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+ipsi];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+ipsi];
	     endif;
	
	   if(fix_check eq 0);
		  Psi_gradient = Psi_gradient ~ 0;
		  Psi_gradient1[.,ipsi] = zeros(nind,1);
          Psi_gradient2[.,ipsi] = zeros(nind,1);
	  else;
		  
		  if(Psi_Cholesky eq 1);
		     d_chol_Psi = zeros(ncholErr,1);d_chol_Psi[ipsi]=1;                         d_chol_Psi = upmat(xpnd(d_chol_Psi));
             d_Psi = zeros(nc,nc);  d_Psi[2:nc,2:nc]   = d_chol_Psi'*chol_Psi + chol_Psi'*d_chol_Psi;
		  else;
			 d_chol_Psi = zeros(ncholErr,1);d_chol_Psi[ipsi]=1;                         d_chol_Psi = xpnd(d_chol_Psi);
             d_Psi = zeros(nc,nc);  d_Psi[2:nc,2:nc]   = d_chol_Psi;
		  endif;
			 
		  Psi_big    = eye(nind*nchocc) .*. d_Psi;
	      
		  if(rho_active eq 1);
	         final_error1 = C_mat1 * Psi_big * C_mat1' ;
			 final_error1 = S_mat1 * final_error1 * S_mat1';
		     Final_Error  = M * final_error1 * M';
		  else;
			 final_error1 = Psi_big ;
			 final_error1 = S_mat1 * final_error1 * S_mat1';
		     Final_Error  = M * final_error1 * M';
		  endif;
		 
		  clear d_chol_Psi,d_Psi,Psi_big,final_error1;
		  
		  seednext = seed10;
		  Total_g = 0;
		
					for pair1(1,nind,1);
						temp_count = 0;
                        Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_Psi = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_Psi;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_Psi;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_Psi;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_Psi = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_Psi;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_Psi;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_Psi;
										
									endif;
								endfor;
							endfor;
						endfor;
						Psi_gradient1[pair1,ipsi] = Total_g1;
                        Psi_gradient2[pair1,ipsi] = (Total_g1/temp_count);
					endfor;
			
			Psi_gradient = Psi_gradient ~ Total_g;
			clear Final_Error;
		endif;
  endfor;
	
 theta_gradient = {};
 theta_gradient1 = zeros(nind,1);
 theta_gradient2 = zeros(nind,1);
         if(theta_active eq 0);
			 theta_gradient = theta_gradient ~ 0;
		 else;
			theta_weight = (dd_theta*weightM1).*.(ones(nchocc,nchocc).*.eye(nc));
	        G_diff       = G_mat1 * theta_weight * G_mat1;
			Lambda_big   = eye(nind) .*. (ones(nchocc,nchocc) .*. Lambda); 
			final_error1 = G_diff * Lambda_big * G_mat1'  + G_mat1 * Lambda_big * G_diff' ;
			final_error1 = S_mat1 * final_error1 * S_mat1';
			Final_Error  = M * final_error1 * M';
			
			clear theta_weight,G_diff,Lambda_big,final_error1;
			
			seednext = seed10;
		    Total_g = 0;
		
					for pair1(1,nind,1);
						temp_count = 0;
                        Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_theta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_theta;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_theta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_theta;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_theta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_theta;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_theta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_theta;
										
									endif;
								endfor;
							endfor;
						endfor;
						theta_gradient1[pair1,1] = Total_g1;
                        theta_gradient2[pair1,1] = (Total_g1/temp_count);
					endfor;
			
			theta_gradient = theta_gradient ~ Total_g;
			clear Final_Error;
		 endif;


delta_gradient = {};
delta_gradient1 = zeros(nind,1);
delta_gradient2 = zeros(nind,1);
         if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+nCholErr+1];
		 endif;
		
		 if(fix_check eq 0);
			 delta_gradient = delta_gradient ~ 0;
		 else;
			
			Sq = inv( eye(nind)   -  (delta * weightM1) );
			d_Sq = dd_delta*Sq*(weightM1)*Sq;
	        d_capS = d_Sq .*. eye(nchocc*nc);
	  
	        clear Sq,d_Sq; 
			
			v2 = (ones(nc,1) .*. smallb )*~(dta[.,ivgenv])';
			j=1;
            v = {};
			do until j == nc+1;
              v = v~(sumc(v2[(j-1)*nvar+1:(j*nvar),.]));
              j = j+1;
            endo;
			
			clear v2;
	        v = reshape(v,nind*nchocc*nc,1);
			
			if(ieffect eq 1);
		      capA = zeros(nc,nc);
              for ir (1,nc-1,1);
                  capA[ir+1,ir+1] = smalla[ir];
              endfor;
		      Alt_sp_coeff = ones(nind*nchocc,1) .*. (capA*ones(nc,1));
			  diff_mat1 = d_capS *(Alt_sp_coeff +  v);
		    else;
			  diff_mat1 = d_capS * v;
			endif;
	  
			diff_mat = M * diff_mat1 ;
			
			if(Mean_Negative eq 1);
				Delta_Mean = -(diff_mat);
			else;
			    Delta_Mean = (diff_mat);
			endif;
			
			final_error1 = d_capS * P_error1 * S_mat1' + S_mat1 * P_error1 * d_capS';
			Delta_Error = M * final_error1 * M';
			
			clear Sq,d_Sq,v,diff_mat1,diff_mat,final_error1,ir,capA,Alt_sp_coeff;
			seednext = seed10;
		    Total_g = 0;
		
					for pair1(1,nind,1);
						temp_count = 0;
                        Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {}; p1d_mean = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1d_mean = p1d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {}; meand = {}; p2d_mean = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            p2d_mean = p2d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = meand | p1d_mean;
							            meand = meand | p2d_mean;
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
																				
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_delta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_delta;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_delta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_delta;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            p2d_mean = p2d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = meand | p1d_mean;
							            meand = meand | p2d_mean;
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
																				
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_delta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_delta;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_delta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_delta;
										
									endif;
								endfor;
							endfor;
						endfor;
						delta_gradient1[pair1,1] = Total_g1;
                        delta_gradient2[pair1,1] = (Total_g1/temp_count);
					endfor;
			
			delta_gradient = delta_gradient ~ Total_g;
			clear Delta_Mean,Delta_Error;
  endif;
		
  lamda_gradient = {};
  lamda_gradient1 = zeros(nind,nvar);
  lamda_gradient2 = zeros(nind,nvar);
      for ilamda(1,nvar,1);
		 if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+ilamda];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+nCholErr+1+ilamda];
		 endif;
		
		 if(fix_check eq 0);
			 lamda_gradient = lamda_gradient ~ 0;
			 lamda_gradient1[.,ilamda] = zeros(nind,1);
			 lamda_gradient2[.,ilamda] = zeros(nind,1);
		 else; 
		     lamda_mat = zeros(nvar,nvar);
	         lamda_dig = zeros(nvar,1);
			 lamda_dig[ilamda] = 1;
			 lamda_dig = lamda_dig .* dd_lamda;
			 lamda_mat = diagrv(lamda_mat,lamda_dig);
			 
			 d_sq1 = weightM1 .*. (lamda_mat * eye(nvar));
			 d_capD = D_mat1 * d_sq1 * D_mat1;
			 
			 OmTild_big = eye(nind) .*. OmTild;
			 final_error1 = (xTildec * d_capD * OmTild_big * D_mat1' * xTildec') + (xTildec * D_mat1 * OmTild_big * d_capD' * xTildec');
			 final_error1 = S_mat1 * final_error1 * S_mat1';
			 Final_Error = M * final_error1 * M';
			 
			 clear lamda_mat,lamda_dig,d_sq1,d_capD,OmTild_big,final_error1;
			 
			 seednext = seed10;
		     Total_g = 0;
		
					for pair1(1,nind,1);
						temp_count = 0;
                        Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lamda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lamda;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_lamda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lamda;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lamda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lamda;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_lamda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lamda;
										
									endif;
								endfor;
							endfor;
						endfor;
						lamda_gradient1[pair1,ilamda] = Total_g1;
			            lamda_gradient2[pair1,ilamda] = (Total_g1/temp_count);
					endfor;
			
			lamda_gradient = lamda_gradient ~ Total_g;
			clear Final_Error;
		endif;
  endfor;

 rho_gradient = {};
 rho_gradient1 = zeros(nind,1);
 rho_gradient2 = zeros(nind,1);
         if(rho_active eq 0);
			 rho_gradient = rho_gradient ~ 0;
		 else; 		 
			 
			 d_sq1   = (dd_rho * capR) .*. eye(nc);
			 d_sq2   = inv( eye(nc*nchocc) - rho*capR .*. eye(nc) );
			 d_capC  = (d_sq2 * d_sq1 * d_sq2);
			 d_capC  = eye(nind) .*. d_capC; 
             Psi_big = eye(nind*nchocc) .*. Psi;
			 
			 final_error1 = (d_capC * Psi_big * C_mat1') + (C_mat1 * Psi_big * d_capC');
			 final_error1 = S_mat1 * final_error1 * S_mat1';
			 Final_Error  = M * final_error1 * M';
			 
			 clear d_sq1,d_sq2,d_capC,Psi_big,final_error1;
			 
			 seednext = seed10;
		     Total_g = 0;
		
					for pair1(1,nind,1);
						temp_count = 0;
                        Total_g1 = 0;
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair2(pair1,nind,1);
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_rho = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_rho;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_rho;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_rho;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_rho = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_rho;
										temp_count = temp_count + 1;
                                        Total_g1 = Total_g1 + g_rho;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_rho;
										
									endif;
								endfor;
							endfor;
						endfor;
						rho_gradient1[pair1,1] = Total_g1;
                        rho_gradient2[pair1,1] = (Total_g1/temp_count);
					endfor;
			
			rho_gradient = rho_gradient ~ Total_g;
			clear Final_Error;
		endif;
		
	gradient = {}; gradient1 = {}; gradient2 = {};
    
	if (ieffect eq 1);
	   gradient = gradient ~ smalla_gradient ~ lambda_gradient ~ smallb_gradient ~ OmTild_gradient ~ Psi_gradient ~ theta_gradient ~ delta_gradient ~ lamda_gradient ~ rho_gradient;
	   gradient1 = gradient1 ~ smalla_gradient1 ~ lambda_gradient1 ~ smallb_gradient1 ~ OmTild_gradient1 ~ Psi_gradient1 ~ theta_gradient1 ~ delta_gradient1 ~ lamda_gradient1 ~ rho_gradient1;
	   gradient2 = gradient2 ~ smalla_gradient2 ~ lambda_gradient2 ~ smallb_gradient2 ~ OmTild_gradient2 ~ Psi_gradient2 ~ theta_gradient2 ~ delta_gradient2 ~ lamda_gradient2 ~ rho_gradient2;
    else;
	   gradient = gradient ~ smallb_gradient ~ OmTild_gradient ~ Psi_gradient  ~ delta_gradient ~ lamda_gradient ~ rho_gradient;
	   gradient1 = gradient1 ~ smallb_gradient1 ~ OmTild_gradient1 ~ Psi_gradient1  ~ delta_gradient1 ~ lamda_gradient1 ~ rho_gradient1;
	   gradient2 = gradient2 ~ smallb_gradient2 ~ OmTild_gradient2 ~ Psi_gradient2  ~ delta_gradient2 ~ lamda_gradient2 ~ rho_gradient2;
   endif;
   
   gradient1_active = selif(gradient1',_max_active);
   gradient2_active = selif(gradient2',_max_active);

   Hessian_unscaled = gradient1_active*gradient1_active';
   Hessian_scaled = gradient2_active*gradient2_active';
   retp(gradient);
endp;

//--------------------------------------------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------JMATRIX PROC----------------------------------------------------------------

proc(1)=JMatrix(parm,dta,grid);
	 local smalla,chol_lambda,smallb,chol_OmTild,chol_Psi,theta,delta,lamda,rho,OmTild,OmTild1,Lambda,Psi,seed20,Psi1;
     local smalla_gradient,lambda_gradient,smallb_gradient,OmTild_gradient,Psi_gradient,theta_gradient,delta_gradient,lamda_gradient,rho_gradient;
     local iatr,d_capA,forgcapV,diff_mat1,diff_mat,seednext,Total_g,pair1,pair1_t,pair2,pair2_t,p1v,p1v_d,p1_mean,p1d_mean,p2v,p2v_d,p1cv_d,p2cv_d,p1cv,p2cv,p2_mean,co_var,mean,p2d_mean,meand,co_var_d;
     local om,omncd,Mean_final,Meand_final,Var_final,shi_a,shi_r,g_smalla,ilambda,d_chol_Lambda,d_Lambda,final_error1,shi_r_unq,g_lambda,Var_d_final,g,w,sss,fix_check,forgx,forgv2,j,forgv,g_smallb;
     local d_chol_OmTild,d_OmTild,OmTild_big,g_OmTild,d_chol_Psi,d_Psi,Psi_big,g_Psi,theta_weight,G_diff,Lambda_big,g_theta,v2,Sq,d_Sq,v,Delta_Mean,Delta_Error,g_delta,lamda_mat,lamda_dig,d_capD,ilamda,g_lamda;
     local d_sq1,d_sq2,d_capC,g_rho,gradient,dd_theta,dd_delta,dd_lamda,dd_rho,Final_error,d_capS,d_OmTild1,ir,capA,Alt_sp_coeff;
	 local all_grid,current_grid,req_grid,r11,pair11,pair22,Grid_pair,ic,All_gradient,gradient_active,grid_pair_count,temp;
	 
	 
	 if(ieffect eq 1);
		  smalla = parm[1:nc-1];
		  chol_Lambda = (upmat(xpnd(parm[nc-1+1:nc-1+nCholErr])));
		  smallb = parm[nc-1+nCholErr+1:nc-1+nCholErr+nvar];
		  chol_OmTild = (upmat(xpnd(parm[nc-1+nCholErr+nvar+1:nc-1+nCholErr+nvar+nCholOmega])));
		  
		  if(Psi_Cholesky eq 1);
		      chol_Psi    = (upmat(xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr])));
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  else;
			  Psi1    = xpnd(parm[nc-1+nCholErr+nvar+nCholOmega+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr]);
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = Psi1;
		  endif;
		  
		  theta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1];
		  delta = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
		  lamda = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+1:nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar];
		  rho   = parm[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  Lambda = zeros(nc,nc);           Lambda[2:nc,2:nc] = chol_Lambda'*chol_Lambda;
		  dd_theta = 1;
		  dd_delta = 1;
		  dd_lamda = ones(nvar,1);
		  dd_rho   = 1;
	  else;
		  smallb = parm[1:nvar];
		  chol_OmTild = (upmat(xpnd(parm[nvar+1:nvar+nCholOmega])));
		  
		  if(Psi_Cholesky eq 1);
		      chol_Psi    = (upmat(xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr])));
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = chol_Psi'*chol_Psi;
		  else;
			  Psi1    = xpnd(parm[nvar+nCholOmega+1:nvar+nCholOmega+nCholErr]);
			  Psi    = zeros(nc,nc);           Psi[2:nc,2:nc]    = Psi1;
		  endif;
		  
		  delta = parm[nvar+nCholOmega+nCholErr+1];
		  lamda = parm[nvar+nCholOmega+nCholErr+1+1:nvar+nCholOmega+nCholErr+1+nvar];
		  rho   = parm[nvar+nCholOmega+nCholErr+1+nvar+1];
		  
		  OmTild = zeros(nvar,nvar);       OmTild1 = chol_OmTild'*chol_OmTild;  OmTild[nran:nvar,nran:nvar] = OmTild1;
		  dd_delta = 1;
		  dd_lamda = ones(nvar,1);
		  dd_rho   = 1;
	  endif;
 
      if(ieffect eq 1);
		 smalla_gradient = zeros(rows(grid),nc-1);
         for iatr(1,nc-1,1);
			 if(_max_active[iatr] ne 0);
				 
				 d_capA = zeros(nc,nc);
				 d_capA[iatr+1,iatr+1]=1;
				 forgcapV = S_mat1 * (ones(nind*nchocc,1) .*. (d_capA*ones(nc,1)) );
				 diff_mat1 = M * forgcapV;
				 
				 if(Mean_Negative eq 1);
				    diff_mat = -diff_mat1;
				 else;
					diff_mat = diff_mat1;
				 endif;
                 
				 clear d_capA,forgcapV,diff_mat1;
				 seednext = seed10;
                 for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
		
					for pair11(1,rows(req_grid),1);
						pair1 = req_grid[pair11,1];
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1d_mean = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1d_mean = p1d_mean ~ diff_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
							
							for pair22(pair11,rows(req_grid),1);
								pair2 = req_grid[pair22,1];
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2d_mean = {}; meand = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smalla = (1/w)*(Meand_final' * shi_a);
										
										Total_g = Total_g + g_smalla;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smalla,g;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smalla = (1/w)*(Meand_final' * shi_a);
										
										Total_g = Total_g + g_smalla;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smalla,g;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
 
                   smalla_gradient[all_grid,iatr] = Total_g;
			   endfor;
			   clear diff_mat;
		   endif;
	   endfor;
	   
       
       lambda_gradient = zeros(rows(grid),nCholErr);
	   for ilambda(1,nCholErr,1);
		if(_max_active[nc-1+ilambda] ne 0);
				
			
			 d_chol_Lambda = zeros(ncholErr,1);d_chol_Lambda[ilambda]=1;                         d_chol_Lambda = upmat(xpnd(d_chol_Lambda));
             d_Lambda = zeros(nc,nc);  d_Lambda[2:nc,2:nc]   = d_chol_Lambda'*chol_Lambda + chol_Lambda'*d_chol_Lambda; 
			 Lambda_big = eye(nind) .*. (ones(nchocc,nchocc) .*. d_Lambda); 
		     final_error1 = G_mat1 * Lambda_big * G_mat1';
			 final_error1 = S_mat1 * final_error1 * S_mat1';
			 Final_Error  = M * final_error1 * M';
			 
			 clear d_chol_Lambda,d_Lambda,Lambda_big,final_error1;
			 
			 seednext = seed10;
             for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
 
                     for pair11(1,rows(req_grid),1);
						 pair1 = req_grid[pair11,1];
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair22(pair11,rows(req_grid),1);
								pair2 = req_grid[pair22,1];
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
						                {w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lambda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lambda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lambda;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20 = seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lambda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lambda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lambda;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
                  lambda_gradient[all_grid,ilambda] = Total_g;
			  endfor;
			clear Final_Error;
		endif;
		
	endfor;
endif;

clear iatr;
smallb_gradient = zeros(rows(grid),nvar);
for iatr(1,nvar,1);
	if(ieffect eq 1);
		fix_check = _max_active[nc-1+nCholErr+iatr];
	else;
		fix_check = _max_active[iatr];
	endif;
	
	if(fix_check ne 0);
 
        forgx = smallb*0;forgx[iatr]=1;
        forgv2 = (ones(nc,1) .*. forgx)*~(dta[.,ivgenv])';
        j=1;
        forgv = {};
        do until j == nc+1;
            forgv = forgv~(sumc(forgv2[(j-1)*nvar+1:(j*nvar),.]));
            j = j+1;
        endo;
        clear forgv2;

        forgv = reshape(forgv,nind*nchocc*nc,1);
        forgcapV = S_mat1 * (forgv );
		diff_mat1 = M * forgcapV;
		
		if(Mean_Negative eq 1);
		    diff_mat = -diff_mat1;
		else;
			diff_mat = diff_mat1;
		endif;
	    
		clear forgv2,forgv,forgcapV,diff_mat1;
		seednext = seed10;
 
        for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
 
                     for pair11(1,rows(req_grid),1);
						 pair1 = req_grid[pair11,1];
						for pair1_t(1,nchocc,1);
 
                                        p1v = {}; p1_mean = {}; p1d_mean = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1d_mean = p1d_mean ~ diff_mat[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
							
							for pair22(pair11,rows(req_grid),1);
								pair2 = req_grid[pair22,1];
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2d_mean = {}; meand = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smallb = (1/w)*(Meand_final' * shi_a);
										Total_g = Total_g + g_smallb;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smallb,g;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2d_mean = p2d_mean ~ diff_mat[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										meand = meand | p1d_mean;
										meand = meand | p2d_mean;
					
										om = diag(co_var);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = meand./(sqrt(om));
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										g_smallb = (1/w)*(Meand_final' * shi_a);
										Total_g = Total_g + g_smallb;
										clear co_var,mean,om,Mean_final,Var_final,Meand_final,shi_a,g_smallb,g;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
              smallb_gradient[all_grid,iatr] = Total_g;
		  endfor;
		  clear diff_mat;
endif;
endfor;

OmTild_gradient = zeros(rows(grid),nCholOmega);
 
   for ichol(1,nCholOmega,1);
	   if(ieffect eq 1);
		  fix_check = _max_active[nc-1+nCholErr+nvar+ichol];
	   else;
		  fix_check = _max_active[nvar+ichol];
	   endif;
	
	   if(fix_check ne 0);
		  
		  d_chol_OmTild = zeros(ncholOmega,1);d_chol_OmTild[ichol]=1;                         d_chol_OmTild = upmat(xpnd(d_chol_OmTild));
          d_OmTild1 = d_chol_OmTild'*chol_OmTild + chol_OmTild'*d_chol_OmTild;
		  d_OmTild = zeros(nvar,nvar);
		  d_OmTild[nran:nvar,nran:nvar] = d_OmTild1;
		  OmTild_big = eye(nind) .*. d_OmTild;
	      final_error1 = xTildec * D_mat1 * OmTild_big * D_mat1' * xTildec' ; 
		  final_error1 = S_mat1 * final_error1 * S_mat1';
		  Final_Error  = M * final_error1 * M';
		  
		  clear d_chol_OmTild,d_OmTild,d_OmTild1,OmTild_big,final_error1;
		  
		  seednext = seed10;
		  for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
					 for pair11(1,rows(req_grid),1);
						 pair1 = req_grid[pair11,1];
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair22(pair11,rows(req_grid),1);
								pair2 = req_grid[pair22,1];
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_OmTild = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_OmTild;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_OmTild;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_OmTild = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_OmTild;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_OmTild;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
             OmTild_gradient[all_grid,ichol] = Total_g;
		 endfor;
		 clear Final_Error;
endif;
endfor;

Psi_gradient = zeros(rows(grid),nCholErr);
     for ipsi(1,nCholErr,1);
		 if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+ipsi];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+ipsi];
	     endif;
	
	   if(fix_check ne 0);
      
	     if(Psi_Cholesky eq 1);
		     d_chol_Psi = zeros(ncholErr,1);d_chol_Psi[ipsi]=1;                         d_chol_Psi = upmat(xpnd(d_chol_Psi));
             d_Psi = zeros(nc,nc);  d_Psi[2:nc,2:nc]   = d_chol_Psi'*chol_Psi + chol_Psi'*d_chol_Psi;
		  else;
			 d_chol_Psi = zeros(ncholErr,1);d_chol_Psi[ipsi]=1;                         d_chol_Psi = xpnd(d_chol_Psi);
             d_Psi = zeros(nc,nc);  d_Psi[2:nc,2:nc]   = d_chol_Psi;
		  endif;
			 
		  Psi_big    = eye(nind*nchocc) .*. d_Psi;
	      
		  if(rho_active eq 1);
	         final_error1 = C_mat1 * Psi_big * C_mat1' ;
			 final_error1 = S_mat1 * final_error1 * S_mat1';
		     Final_Error  = M * final_error1 * M';
		  else;
			 final_error1 = Psi_big ;
			 final_error1 = S_mat1 * final_error1 * S_mat1';
		     Final_Error  = M * final_error1 * M';
		  endif;
		 
		  clear d_chol_Psi,d_Psi,Psi_big,final_error1;
		  
		  seednext = seed10;
		  
		  for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
                     for pair11(1,rows(req_grid),1);
						 pair1 = req_grid[pair11,1];
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair22(pair11,rows(req_grid),1);
								pair2 = req_grid[pair22,1];
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_Psi = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_Psi;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_Psi;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_Psi = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_Psi;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_Psi;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
                 Psi_gradient[all_grid,ipsi] = Total_g;
			 endfor;
			 clear Final_Error;
endif;
endfor;

 
 theta_gradient = zeros(rows(grid),1);
   if(theta_active eq 1);
	        theta_weight = (dd_theta*weightM1).*.(ones(nchocc,nchocc).*.eye(nc));
	        G_diff       = G_mat1 * theta_weight * G_mat1;
			Lambda_big   = eye(nind) .*. (ones(nchocc,nchocc) .*. Lambda); 
			final_error1 = G_diff * Lambda_big * G_mat1'  + G_mat1 * Lambda_big * G_diff' ;
			final_error1 = S_mat1 * final_error1 * S_mat1';
			Final_Error  = M * final_error1 * M';
			
			clear theta_weight,G_diff,Lambda_big,final_error1;
			
			seednext = seed10;
            for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
					 for pair11(1,rows(req_grid),1);
						 pair1 = req_grid[pair11,1];
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair22(pair11,rows(req_grid),1);
								pair2 = req_grid[pair22,1];
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_theta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_theta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_theta;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_theta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_theta;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_theta;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
                 theta_gradient[all_grid,1] = Total_g;
			 endfor;
			 clear Final_Error;
endif;

delta_gradient = zeros(rows(grid),1);
         if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+nCholErr+1];
		 endif;
		
		 if(fix_check ne 0);
            Sq = inv( eye(nind)   -  (delta * weightM1) );
			d_Sq = dd_delta*Sq*(weightM1)*Sq;
	        d_capS = d_Sq .*. eye(nchocc*nc);
	  
	        clear Sq,d_Sq; 
			
			v2 = (ones(nc,1) .*. smallb )*~(dta[.,ivgenv])';
			j=1;
            v = {};
			do until j == nc+1;
              v = v~(sumc(v2[(j-1)*nvar+1:(j*nvar),.]));
              j = j+1;
            endo;
			
			clear v2;
	        v = reshape(v,nind*nchocc*nc,1);
			
			if(ieffect eq 1);
		      capA = zeros(nc,nc);
              for ir (1,nc-1,1);
                  capA[ir+1,ir+1] = smalla[ir];
              endfor;
		      Alt_sp_coeff = ones(nind*nchocc,1) .*. (capA*ones(nc,1));
			  diff_mat1 = d_capS *(Alt_sp_coeff +  v);
		    else;
			  diff_mat1 = d_capS * v;
			endif;
	  
			diff_mat = M * diff_mat1 ;
			
			if(Mean_Negative eq 1);
				Delta_Mean = -(diff_mat);
			else;
			    Delta_Mean = (diff_mat);
			endif;
			
			final_error1 = d_capS * P_error1 * S_mat1' + S_mat1 * P_error1 * d_capS';
			Delta_Error = M * final_error1 * M';
			
			clear Sq,d_Sq,v,diff_mat1,diff_mat,final_error1,ir,capA,Alt_sp_coeff;
			seednext = seed10;
			Grid_pair = zeros(rows(grid),1);
			for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
					 grid_pair_count = 0;
						for pair11(1,rows(req_grid),1);
							pair1 = req_grid[pair11,1];
									for pair1_t(1,nchocc,1);
										
										p1v = {}; p1_mean = {}; p1v_d = {}; p1d_mean = {};
													p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
													p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
													p1d_mean = p1d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
													p1v_d = p1v_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										
										for pair22(pair11,rows(req_grid),1);
											pair2 = req_grid[pair22,1];
											for pair2_t(1,nchocc,1);
												
												p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {}; meand = {}; p2d_mean = {};
												
												if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
													p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
													p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
													p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
													p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
													co_var = co_var ~ (p1v ~ p1cv);
													co_var = co_var | (p2cv ~ p2v);
													mean = mean | p1_mean;
													mean = mean | p2_mean;
													
													p2v_d = p2v_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
													p1cv_d = p1cv_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
													p2cv_d = p2cv_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
													p2d_mean = p2d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
													co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
													co_var_d = co_var_d | (p2cv_d ~ p2v_d);
													meand = meand | p1d_mean;
													meand = meand | p2d_mean;
													
													om = diag(co_var);
													omncd = diag(co_var_d);
													Mean_final = mean'./(sqrt((om')));
													Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
													Var_final = corrvc(co_var);
													Var_final = diagrv(Var_final,ones(2*(nc-1),1));
													
													Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
													seed20=seednext;
																							
													{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
																									   
													seednext = sss;
													shi_a = (g[1,1:2*(nc-1)])';
													shi_r = (g[1,2*(nc-1)+1:cols(g)])';
													
													shi_r_unq = {};
													for ishi(1,rows(Var_d_final)-1,1);
													   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
													endfor;
												   
													g_delta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
													Total_g = Total_g + g_delta;
													grid_pair_count = grid_pair_count + 1;
													clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_delta;
													
												elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
													p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
													p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
													p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
													p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
													co_var = co_var ~ (p1v ~ p1cv);
													co_var = co_var | (p2cv ~ p2v);
													mean = mean | p1_mean;
													mean = mean | p2_mean;
													
													p2v_d = p2v_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
													p1cv_d = p1cv_d ~ Delta_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
													p2cv_d = p2cv_d ~ Delta_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
													p2d_mean = p2d_mean ~ Delta_Mean[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
													co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
													co_var_d = co_var_d | (p2cv_d ~ p2v_d);
													meand = meand | p1d_mean;
													meand = meand | p2d_mean;
													
													om = diag(co_var);
													omncd = diag(co_var_d);
													Mean_final = mean'./(sqrt((om')));
													Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
													Var_final = corrvc(co_var);
													Var_final = diagrv(Var_final,ones(2*(nc-1),1));
													
													Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
													seed20=seednext;
																							
													{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
																									   
													seednext = sss;
													shi_a = (g[1,1:2*(nc-1)])';
													shi_r = (g[1,2*(nc-1)+1:cols(g)])';
													
													shi_r_unq = {};
													for ishi(1,rows(Var_d_final)-1,1);
													   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
													endfor;
												   
													g_delta = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
													Total_g = Total_g + g_delta;
													grid_pair_count = grid_pair_count + 1;
													clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_delta;
													
												endif;
											endfor;
										endfor;
									endfor;
								endfor;
                         delta_gradient[all_grid,1] = Total_g;
						 Grid_pair[all_grid,1] = grid_pair_count;
					 endfor;
clear Delta_Mean,Delta_Error;
endif;					 
 
lamda_gradient = zeros(rows(grid),nvar);
      for ilamda(1,nvar,1);
		 if(ieffect eq 1);
		    fix_check = _max_active[nc-1+nCholErr+nvar+nCholOmega+nCholErr+1+1+ilamda];
	     else;
		    fix_check = _max_active[nvar+nCholOmega+nCholErr+1+ilamda];
		 endif;
		
		 if(fix_check ne 0);
            
			lamda_mat = zeros(nvar,nvar);
	         lamda_dig = zeros(nvar,1);
			 lamda_dig[ilamda] = 1;
			 lamda_dig = lamda_dig .* dd_lamda;
			 lamda_mat = diagrv(lamda_mat,lamda_dig);
			 
			 d_sq1 = weightM1 .*. (lamda_mat * eye(nvar));
			 d_capD = D_mat1 * d_sq1 * D_mat1;
			 
			 OmTild_big = eye(nind) .*. OmTild;
			 final_error1 = (xTildec * d_capD * OmTild_big * D_mat1' * xTildec') + (xTildec * D_mat1 * OmTild_big * d_capD' * xTildec');
			 final_error1 = S_mat1 * final_error1 * S_mat1';
			 Final_Error = M * final_error1 * M';
			 
			 clear lamda_mat,lamda_dig,d_sq1,d_capD,OmTild_big,final_error1;
			 
			 seednext = seed10;
			 
			 for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
					 
					 for pair11(1,rows(req_grid),1);
						 pair1 = req_grid[pair11,1];
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair22(pair11,rows(req_grid),1);
								pair2 = req_grid[pair22,1];
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lamda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lamda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lamda;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_lamda = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_lamda;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_lamda;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
               lamda_gradient[all_grid,ilamda] = Total_g;
		   endfor;
		   clear Final_Error;
endif;
endfor;

rho_gradient = zeros(rows(grid),1);
         if(rho_active ne 0);
			 d_sq1   = (dd_rho * capR) .*. eye(nc);
			 d_sq2   = inv( eye(nc*nchocc) - rho*capR .*. eye(nc) );
			 d_capC  = (d_sq2 * d_sq1 * d_sq2);
			 d_capC  = eye(nind) .*. d_capC; 
             Psi_big = eye(nind*nchocc) .*. Psi;
			 
			 final_error1 = (d_capC * Psi_big * C_mat1') + (C_mat1 * Psi_big * d_capC');
			 final_error1 = S_mat1 * final_error1 * S_mat1';
			 Final_Error  = M * final_error1 * M';
			 
			 clear d_sq1,d_sq2,d_capC,Psi_big,final_error1;
			 
			 seednext = seed10;
			 for all_grid(1,rows(grid),1);
					 current_grid = grid[all_grid,.];
					 req_grid = {}; r11=1;
					 do until (r11>cols(current_grid));
						  if(current_grid[1,r11] ne 0);
							  req_grid = req_grid | current_grid[1,r11];
						  endif;
						r11 = r11 + 1;
					 endo;
 
                     
				     Total_g = 0;
					 
					 for pair11(1,rows(req_grid),1);
						 pair1 = req_grid[pair11,1];
						for pair1_t(1,nchocc,1);
							
							p1v = {}; p1_mean = {}; p1v_d = {};
										p1v = p1v ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p1_mean = p1_mean ~ B_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),1];
										p1v_d = p1v_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							
							for pair22(pair11,rows(req_grid),1);
								pair2 = req_grid[pair22,1];
								for pair2_t(1,nchocc,1);
									
									p2v = {}; p1cv = {}; p2cv = {}; p2_mean = {}; co_var = {}; mean = {}; p2v_d = {}; p1cv_d = {}; p2cv_d = {}; co_var_d = {};
									
									if( (pair1 eq pair2) AND (pair2_t - pair1_t > 0));
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
										
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									    									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_rho = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_rho;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_rho;
										
									elseif((pair1 ne pair2) AND distance[pair1,pair2]<=cutoff_distance);
										p2v = p2v ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p1cv = p1cv ~ sigma_mat1[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
										p2cv = p2cv ~ sigma_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
										p2_mean = p2_mean ~ B_mat1[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),1];
										co_var = co_var ~ (p1v ~ p1cv);
										co_var = co_var | (p2cv ~ p2v);
										mean = mean | p1_mean;
										mean = mean | p2_mean;
					
										p2v_d = p2v_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p1cv_d = p1cv_d ~ Final_Error[(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2),(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2)];
							            p2cv_d = p2cv_d ~ Final_Error[(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1):(nc-1)*nchocc*(pair2-1)+1+(nc-1)*(pair2_t-1)+(nc-2),(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1):(nc-1)*nchocc*(pair1-1)+1+(nc-1)*(pair1_t-1)+(nc-2)];
							            co_var_d = co_var_d ~ (p1v_d ~ p1cv_d);
							            co_var_d = co_var_d | (p2cv_d ~ p2v_d);
					                    meand = zeros(2*(nc-1),1);
										
										om = diag(co_var);
										omncd = diag(co_var_d);
										Mean_final = mean'./(sqrt((om')));
										Meand_final = (  sqrt(om') .* meand' - mean' .* omncd' ./ sqrt(om') ./2   ) ./ (om');
										Var_final = corrvc(co_var);
										Var_final = diagrv(Var_final,ones(2*(nc-1),1));
										
										Var_d_final = ( (co_var_d./sqrt(om))' ./ sqrt(om) ) - 0.5 * ( (co_var ./(om^(3/2)) .* omncd )' ./(om^(1/2))   + ((co_var ./(om^(1/2)) )' ./(om^(3/2))) .* omncd ) ;
										seed20=seednext;
										
										{w,g,sss} = pdfmvna(Mean_final,Var_final,seed20);
									   									   
									    seednext = sss;
										shi_a = (g[1,1:2*(nc-1)])';
										shi_r = (g[1,2*(nc-1)+1:cols(g)])';
										
										shi_r_unq = {};
										for ishi(1,rows(Var_d_final)-1,1);
										   shi_r_unq = shi_r_unq ~ Var_d_final[ishi,ishi+1:cols(Var_d_final)];
									    endfor;
									   
										g_rho = (1/w)*((Meand_final * shi_a) + (shi_r_unq * shi_r));
										Total_g = Total_g + g_rho;
										clear co_var,mean,co_var_d,meand,om,omncd,Mean_final,Meand_final,Var_final,Var_d_final,shi_a,shi_r,g,shi_r_unq,g_rho;
										
									endif;
								endfor;
							endfor;
						endfor;
					endfor;
				rho_gradient[all_grid,1] =  Total_g;
			endfor;
			clear Final_Error;
endif;

gradient = {};
if (ieffect eq 1);
    gradient = gradient ~ smalla_gradient ~ lambda_gradient ~ smallb_gradient ~ OmTild_gradient ~ Psi_gradient ~ theta_gradient ~ delta_gradient ~ lamda_gradient ~ rho_gradient;
else;
	gradient = gradient ~ smallb_gradient ~ OmTild_gradient ~ Psi_gradient  ~ delta_gradient ~ lamda_gradient ~ rho_gradient;
endif;

gradient = gradient';
gradient_active = selif(gradient,_max_active);
All_gradient = zeros(sumc(_max_active),sumc(_max_active));

for ic(1,rows(grid),1);
	temp = gradient_active[.,ic]*gradient_active[.,ic]';
	temp = temp./Grid_pair[ic,1];
	All_gradient = All_gradient + temp;
	clear temp;
endfor;

All_gradient = (1/rows(grid))*All_gradient; 
retp(All_gradient);
endp;


proc time_check();
	local y,x;
	y = time;
	x = y[1,1]*60 + y[2,1] + y[3,1]/60;
	retp(x);
endp;

proc (2) = cdfmvna(a,r,s);
local nn,ss1,om,m,aa,ab,w,cm,s1,n1,p,j,x,rho,y,z,z1,z3,z2,cond,k,omega21,omega11,condk,pcomb,newper,rnum,ss;

  m = cols(a);
  w = {};
  { rnum, ss } = rndn(1,m,s);
  aa = seqa(1,1,m)~(rnum)';
  aa = sortc(aa,2);
  w  = w|((aa[.,1])');
  s  = ss;	
  w  = w';  
  
n1 = cols(w);
p = 0;
j = 1;

a = a.*(a .<5.7)+5.7*(a.>=5.7);      
a = a.*(a .>-5.7)-5.7*(a.<=-5.7);  

ab = a';
do until j > n1;
  x = ab[w[.,j]];
  rho = submat(r,w[.,j],w[.,j]);
  y = reshape(((ones(m,1).*.x)'),m,m);
  z = cdfbvn(x,y,rho);
  z = diagrv(z,cdfn(x));
  z1 = cdfn(x).*cdfn(y);
  z3 = cdfn(x);
  z2 = 1-z3;
  cond = 1;
  k = 3;
  do until k > m;
    omega21 = z[k,1:k-1]-z1[k,1:k-1];
    omega11 = z[1:k-1,1:k-1]-z1[1:k-1,1:k-1];
    trap 1;
    cm = invpd(omega11);
    if scalerr(cm);
      cm=inv(omega11);
    endif;
    trap 0;
    condk = z3[k]+omega21*(cm)*z2[1:k-1];   
    cond=cond*condk;
    k = k+1;
  endo;
  pcomb = z[1,2]*cond;
  p = p+pcomb;    
  j=j+1;
endo;
if ((p/n1) >0 and (p/n1) <=1);
  retp(p/n1,s);
else;
  { nn,ss1 } = cdfmvna(a,r,s);
  retp(nn,ss1);
endif;  
endp;


proc (3) = pdfmvna(a,r,s);
local m,w,s1,n1,p,j,x,rho,y,z,z1,z3,z2,cond,k,omega21,omega11,omega55,condk,pcomb,cm,int_count;
local rhovec,c,rho1,rho2,g3,g5,g10,g11,g12,g13,g14,g15,g20,g25,g30,g53,g31,g35,g36,g40,g45,g46,g47,g50,g51;
local grff,gw,condpass,sk,l,ab,ir,jr,res2,g80,g81,g59,kk,g49,g65,g55,mm,res,res1,aaa1,g56,g57,g58,g60,g61,g62,gr,gr1,gw1;
local gw2,gr2,gr3,aaa,gwf,grf,gwfinal,grfinal,invomg11,nnnn,gggg,ssss1,aa,t,newper,rnum,ss,r_1;

	  m = cols(a);
	  w = {};
	  { rnum, ss } = rndn(1,m,s);
	  aa = seqa(1,1,m)~(rnum)';
	  aa = sortc(aa,2);
	  w  = w|((aa[.,1])');
	  s  = ss;	
	  w  = w';

	n1 = cols(w);
	p = 0;
	j = 1;

	a = a.*(a .<5.7)+5.7*(a.>=5.7);     
	a = a.*(a .>-5.7)-5.7*(a.<=-5.7);  

	ab = a';
	condpass={};
	do until j > n1;
	  x = ab[w[.,j]];
	  rho = submat(r,w[.,j],w[.,j]);
	  y = reshape(((ones(m,1).*.x)'),m,m);
	  z = cdfbvn(x,y,rho);
	  z = diagrv(z,cdfn(x));
	  z1 = cdfn(x).*cdfn(y);
	  z3 = cdfn(x);
	  z2 = 1-z3;
	  cond = 1;
	  k = 3;
	  do until k > m;
		omega21 = z[k,1:k-1]-z1[k,1:k-1];
		omega11 = z[1:k-1,1:k-1]-z1[1:k-1,1:k-1];
		trap 1;
		cm = invpd(omega11);
		if scalerr(cm);
		  cm=inv(omega11);
		endif;
		trap 0;
		condk = z3[k]+omega21*(cm)*z2[1:k-1];  
		cond=cond*condk;
		k = k+1;
	  endo;
	  pcomb = z[1,2]*cond;
	  condpass = condpass~cond;
	  p = p+pcomb;    
	  j=j+1;
	endo;

	gwfinal = zeros(1,m);
	grfinal = zeros(1,((m-1)*(m)/2));
	j=1;
	do until j > n1;
	  x = ab[w[.,j]];
	  rho = submat(r,w[.,j],w[.,j]);
	  rhovec = {};
	  c=1;
	  do until c==cols(rho);
		 rhovec = rhovec~rho[c,c+1:cols(rho)];
		 c=c+1;
	  endo;
	  y = reshape(((ones(m,1).*.x)'),m,m);
	  z = cdfbvn(x,y,rho);
	  z = diagrv(z,cdfn(x));
	  z1 = cdfn(x).*cdfn(y);
	  z3 = cdfn(x);
	  z2 = 1-z3;
	  rho1 = diagrv(rho,zeros(m,1));
	  rho2 = sqrt(1-rho1^2);
	  g3 = pdfn(x);
	  g5 = (y-rho1.*x)./rho2;
	  g10 = g3.*cdfn(g5);
	  g11 = g3.*cdfn(y);
	  g12 = g10-g11;
	  g13 = g12;
	  g14 = g3.*(1-2*cdfn(x));
	  g15 = diagrv(g13,g14);
	  g20 = -g3;

	  g25 = (1/rho2).*g3.*pdfn(g5);
	  g25 = diagrv(g25,zeros(m,1));
	  

	  g30 = g10[1,2]~g10[2,1]~zeros(1,m-2);
	  g53 = g25[1,2]~zeros(1,cols(rhovec)-1);


	  k = 3;
	  gw1 = zeros(1,m);
	  gr1 = zeros(1,cols(rhovec));
	  do until k > m;
		omega21 = z[k,1:k-1]-z1[k,1:k-1];
		omega11 = z[1:k-1,1:k-1]-z1[1:k-1,1:k-1];
		trap 1;
		invomg11 = invpd(omega11); 
		if scalerr(invomg11);
		  invomg11=inv(omega11);
		endif;
		trap 0;  
		condk = z3[k]+omega21*invomg11*z2[1:k-1];
		g31 = zeros(1,m);
		g31[k] = g3[k];
		l = 1;
		g40={};
		g46={};
		g51={};
		g81 = z2[1:k-1];    
		do until l == k;
		  g35 = zeros(k-1,k-1);
		  g35[l,1:k-1] = g15[l,1:k-1];
		  g35=g35+g35';
		  g35 = diagrv(g35,(diag(g35)/2));
		  g36 = -invomg11*g35*invomg11;
		  g36 = omega21*g36*g81;
		  g40=g40~g36;

		  g45 = zeros(1,k-1);
		  g45[l] = g15[l,k];
		  g46 = g46~(g45*invomg11*g81);

		  g50 = zeros(k-1,1);
		  g50[l]=g20[l];
		  g51 = g51~(omega21*invomg11*g50);
		  l=l+1;
		endo;

		g40 = g40~zeros(1,m-(k-1));
		
		g49 = g15[k,1:k-1];
		g46 = g46~(g49*invomg11*g81);

		g47 = zeros(1,m);
		g47[1:cols(g46)] = g46;

		g51 =g51~zeros(1,m-(k-1));

		gw = (g31+g40+g47+g51)*((condpass[j])/condk).*z[1,2];
	 
		/* Start here for gradients with respect to rho parameters */


		l=1;
		kk = cols(rhovec);
		g60={};
		g65={};
		do until l>kk;
		  g55 = zeros(1,kk);
		  g55[l]=1; 
		  mm = 1;
		  sk=0;
		  g56 = zeros(m,m);
		  do until mm>m-1;
			g56[mm,mm+1:m] = (g55[sk+1:sk+m-mm]);
			sk=sk+m-mm;
			mm=mm+1;
		  endo; 
		  g57=g56+g56';
		  g59 = g57.*g25;
		  g59 = g59[1:k-1,1:k-1];
		  g58 = -invomg11*g59*invomg11;
		  g58 = omega21*g58*z2[1:k-1];
		  g60 = g60~g58;

		  g61 = g57[k,1:k-1].*g25[k,1:k-1];
		  g62 = g61*invomg11*z2[1:k-1];
		  g65 = g65~g62;      
		  l=l+1;
		endo;
	  
		gr = (g60+g65)*((condpass[j])/condk).*z[1,2];
		gw1 = gw+gw1;
		gr1 = gr+gr1;
		k=k+1;
	  endo;
	  gw2 = (g30.*condpass[j])+gw1;
	  gr2 = (g53.*condpass[j])+gr1;

	  mm=1;
	  sk=0;
	  gr3 = zeros(m,m);
	  do until mm>m-1;
		gr3[mm,mm+1:m] = (gr2[sk+1:sk+m-mm]);
		sk=sk+m-mm;
		mm=mm+1;
	  endo; 

	  /* commands below to resequence gradients based on permutation */
	  
	  aaa = indnv(seqa(1,1,m),w[.,j]);
	  gwf = gw2[aaa];
	  grf = submat(gr3,aaa,aaa); 

	  res = {};
	  ir = 1;
	  do until ir == m;
		jr = ir+1;
		res = res|((ones(m-ir,1).*.w[ir,j])~w[jr:m,j]);
		ir=ir+1;
	  endo;

	  res=res';
	  res2={};
	  t=1;
	  do until t>cols(res);
		res2 = res2~sortc(res[.,t],1);
		t=t+1;
	  endo;

	  res2=res2';
	  res1 = combinate(m,2);
	  res1 = res1[.,1] .*(10^(trunc (ln(res1[.,2])./ln(10))+1)) + res1[.,2];
	  res2 = res2[.,1] .*(10^(trunc (ln(res2[.,2])./ln(10))+1)) + res2[.,2];
	 
	  aaa1 = indnv(res1,res2);
	  grf = gr2[aaa1];
	  gwfinal = gwfinal+gwf;
	  grfinal = grfinal+grf;
	  j=j+1;
	endo;
	if ((p/n1) >0 and (p/n1) <=1);
	  retp(p/n1,(gwfinal~grfinal)/n1,s);
	else;
	 { nnnn,gggg,ssss1 } = pdfmvna(a,r,s);
	  retp(nnnn,gggg,ssss1);
	endif;
endp;
	
